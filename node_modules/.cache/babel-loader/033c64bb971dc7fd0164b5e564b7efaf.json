{"ast":null,"code":"import { IfcComponent } from '../../base-types';\nexport class IfcSelection extends IfcComponent {\n  constructor(context, loader, material) {\n    var _this;\n\n    super(context);\n    _this = this;\n    this.context = context;\n    this.mesh = null;\n\n    this.pick = async function (item) {\n      let focusSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let duration = arguments.length > 2 ? arguments[2] : undefined;\n      if (_this.selected === item.faceIndex || item.faceIndex == null) return null;\n      _this.selected = item.faceIndex;\n      const mesh = item.object;\n      const id = await _this.loader.ifcManager.getExpressId(mesh.geometry, item.faceIndex);\n      if (id === undefined) return null;\n\n      _this.removeSelectionOfOtherModel(mesh);\n\n      _this.modelID = mesh.modelID;\n\n      _this.newSelection([id]);\n\n      if (focusSelection) _this.focusSelection(duration);\n      return {\n        modelID: _this.modelID,\n        id\n      };\n    };\n\n    this.pickByID = function (modelID, ids) {\n      let focusSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      let duration = arguments.length > 3 ? arguments[3] : undefined;\n      _this.modelID = modelID;\n\n      _this.newSelection(ids);\n\n      if (focusSelection) _this.focusSelection(duration);\n    };\n\n    this.newSelection = ids => {\n      const mesh = this.loader.ifcManager.createSubset({\n        scene: this.scene,\n        modelID: this.modelID,\n        ids,\n        removePrevious: true,\n        material: this.material\n      });\n\n      if (mesh) {\n        this.mesh = mesh;\n      }\n    };\n\n    this.scene = context.getScene();\n    this.loader = loader;\n    this.material = material;\n    this.selected = -1;\n    this.modelID = -1;\n  }\n\n  unpick() {\n    this.mesh = null;\n    this.loader.ifcManager.removeSubset(this.modelID, this.scene, this.material);\n  }\n\n  removeSelectionOfOtherModel(mesh) {\n    if (this.modelID !== undefined && this.modelID !== (mesh === null || mesh === void 0 ? void 0 : mesh.modelID)) {\n      this.loader.ifcManager.removeSubset(this.modelID, this.scene, this.material);\n    }\n  }\n\n  focusSelection(duration) {\n    if (this.mesh) {\n      this.context.ifcCamera.targetItem(this.mesh, duration);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/components/ifc/selection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { IfcComponent } from '../../base-types';\r\nexport class IfcSelection extends IfcComponent {\r\n    constructor(context, loader, material) {\r\n        super(context);\r\n        this.context = context;\r\n        this.mesh = null;\r\n        this.pick = async (item, focusSelection = false, duration) => {\r\n            if (this.selected === item.faceIndex || item.faceIndex == null)\r\n                return null;\r\n            this.selected = item.faceIndex;\r\n            const mesh = item.object;\r\n            const id = await this.loader.ifcManager.getExpressId(mesh.geometry, item.faceIndex);\r\n            if (id === undefined)\r\n                return null;\r\n            this.removeSelectionOfOtherModel(mesh);\r\n            this.modelID = mesh.modelID;\r\n            this.newSelection([id]);\r\n            if (focusSelection)\r\n                this.focusSelection(duration);\r\n            return { modelID: this.modelID, id };\r\n        };\r\n        this.pickByID = (modelID, ids, focusSelection = false, duration) => {\r\n            this.modelID = modelID;\r\n            this.newSelection(ids);\r\n            if (focusSelection)\r\n                this.focusSelection(duration);\r\n        };\r\n        this.newSelection = (ids) => {\r\n            const mesh = this.loader.ifcManager.createSubset({\r\n                scene: this.scene,\r\n                modelID: this.modelID,\r\n                ids,\r\n                removePrevious: true,\r\n                material: this.material\r\n            });\r\n            if (mesh) {\r\n                this.mesh = mesh;\r\n            }\r\n        };\r\n        this.scene = context.getScene();\r\n        this.loader = loader;\r\n        this.material = material;\r\n        this.selected = -1;\r\n        this.modelID = -1;\r\n    }\r\n    unpick() {\r\n        this.mesh = null;\r\n        this.loader.ifcManager.removeSubset(this.modelID, this.scene, this.material);\r\n    }\r\n    removeSelectionOfOtherModel(mesh) {\r\n        if (this.modelID !== undefined && this.modelID !== (mesh === null || mesh === void 0 ? void 0 : mesh.modelID)) {\r\n            this.loader.ifcManager.removeSubset(this.modelID, this.scene, this.material);\r\n        }\r\n    }\r\n    focusSelection(duration) {\r\n        if (this.mesh) {\r\n            this.context.ifcCamera.targetItem(this.mesh, duration);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=selection.js.map"]},"metadata":{},"sourceType":"module"}