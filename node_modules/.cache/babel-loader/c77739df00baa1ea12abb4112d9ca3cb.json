{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { IfcComponent } from '../../base-types';\nexport var DropboxAPI = /*#__PURE__*/function (_IfcComponent) {\n  _inherits(DropboxAPI, _IfcComponent);\n\n  var _super = _createSuper(DropboxAPI);\n\n  function DropboxAPI(context, loader) {\n    var _this;\n\n    _classCallCheck(this, DropboxAPI);\n\n    _this = _super.call(this, context);\n\n    _this.onDBChooserSuccess = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n        var rawResponse, result, ifcBlob, file;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(files[0].link);\n\n              case 2:\n                rawResponse = _context.sent;\n                _context.next = 5;\n                return rawResponse.text();\n\n              case 5:\n                result = _context.sent;\n                ifcBlob = new Blob([result], {\n                  type: 'text/plain'\n                });\n                file = new File([ifcBlob], 'ifcFile');\n\n                _this.loader.loadIfc(file);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getOptions = function () {\n      return {\n        success: _this.onDBChooserSuccess,\n        cancel: _this.onDBChooserCancel,\n        linkType: 'direct',\n        multiselect: false,\n        extensions: ['.ifc'],\n        folderselect: false\n      };\n    };\n\n    _this.loader = loader;\n    _this.counter = 0;\n\n    _this.initializeAPI();\n\n    return _this;\n  }\n\n  _createClass(DropboxAPI, [{\n    key: \"loadDropboxIfc\",\n    value: function loadDropboxIfc() {\n      this.openDropboxChooser(this.getOptions());\n    }\n  }, {\n    key: \"openDropboxChooser\",\n    value: function openDropboxChooser(options) {\n      var _this2 = this;\n\n      try {\n        if (Dropbox) {\n          Dropbox.choose(this.getOptions());\n          return clearTimeout(this.tid);\n        }\n      } catch (error) {\n        if (this.counter++ > 9) return this.errorOnConnection();\n        this.tid = setTimeout(function () {\n          return _this2.openDropboxChooser(options);\n        }, 2000);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"errorOnConnection\",\n    value: function errorOnConnection() {\n      console.error('Error: could not communicate with dropbox');\n      clearTimeout(this.tid);\n    }\n  }, {\n    key: \"onDBChooserCancel\",\n    value: function onDBChooserCancel(_files) {\n      console.log('Canceled!');\n    }\n  }, {\n    key: \"initializeAPI\",\n    value: function initializeAPI() {\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = 'https://www.dropbox.com/static/api/2/dropins.js';\n      script.id = 'dropboxjs';\n      script.setAttribute('data-app-key', 'iej3z16hhyca35a');\n      document.getElementsByTagName('head')[0].appendChild(script);\n    }\n  }]);\n\n  return DropboxAPI;\n}(IfcComponent);","map":{"version":3,"sources":["../../../src/components/import-export/dropbox.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,YAAT,QAAsC,kBAAtC;AAeA,WAAa,UAAb;AAAA;;AAAA;;AAKE,sBAAY,OAAZ,EAA8B,MAA9B,EAAgD;AAAA;;AAAA;;AAC9C,8BAAM,OAAN;;AA4BM,UAAA,kBAAA;AAAA,0EAAqB,iBAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACD,KAAK,CAAC,KAAK,CAAC,CAAD,CAAL,CAAS,IAAV,CADJ;;AAAA;AACrB,gBAAA,WADqB;AAAA;AAAA,uBAEN,WAAW,CAAC,IAAZ,EAFM;;AAAA;AAErB,gBAAA,MAFqB;AAGrB,gBAAA,OAHqB,GAGX,IAAI,IAAJ,CAAS,CAAC,MAAD,CAAT,EAAmB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAAnB,CAHW;AAIrB,gBAAA,IAJqB,GAId,IAAI,IAAJ,CAAS,CAAC,OAAD,CAAT,EAAoB,SAApB,CAJc;;AAK3B,sBAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB;;AAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;;AAAA;AAAA;AAAA;AAAA;;AAQA,UAAA,UAAA,GAAa,YAAK;AACxB,aAAO;AACL,QAAA,OAAO,EAAE,MAAK,kBADT;AAEL,QAAA,MAAM,EAAE,MAAK,iBAFR;AAGL,QAAA,QAAQ,EAAE,QAHL;AAIL,QAAA,WAAW,EAAE,KAJR;AAKL,QAAA,UAAU,EAAE,CAAC,MAAD,CALP;AAML,QAAA,YAAY,EAAE;AANT,OAAP;AAQD,KATO;;AAnCN,UAAK,MAAL,GAAc,MAAd;AACA,UAAK,OAAL,GAAe,CAAf;;AACA,UAAK,aAAL;;AAJ8C;AAK/C;;AAVH;AAAA;AAAA,WAYE,0BAAc;AACZ,WAAK,kBAAL,CAAwB,KAAK,UAAL,EAAxB;AACD;AAdH;AAAA;AAAA,WAgBE,4BAAmB,OAAnB,EAA+B;AAAA;;AAC7B,UAAI;AACF,YAAI,OAAJ,EAAa;AACX,UAAA,OAAO,CAAC,MAAR,CAAe,KAAK,UAAL,EAAf;AACA,iBAAO,YAAY,CAAC,KAAK,GAAN,CAAnB;AACD;AACF,OALD,CAKE,OAAO,KAAP,EAAc;AACd,YAAI,KAAK,OAAL,KAAiB,CAArB,EAAwB,OAAO,KAAK,iBAAL,EAAP;AACxB,aAAK,GAAL,GAAW,UAAU,CAAC;AAAA,iBAAM,MAAI,CAAC,kBAAL,CAAwB,OAAxB,CAAN;AAAA,SAAD,EAAyC,IAAzC,CAArB;AACD;;AACD,aAAO,IAAP;AACD;AA3BH;AAAA;AAAA,WA6BU,6BAAiB;AACvB,MAAA,OAAO,CAAC,KAAR,CAAc,2CAAd;AACA,MAAA,YAAY,CAAC,KAAK,GAAN,CAAZ;AACD;AAhCH;AAAA;AAAA,WAqDU,2BAAkB,MAAlB,EAA6C;AACnD,MAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD;AAvDH;AAAA;AAAA,WAyDU,yBAAa;AACnB,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAA,MAAM,CAAC,IAAP,GAAc,iBAAd;AACA,MAAA,MAAM,CAAC,GAAP,GAAa,iDAAb;AACA,MAAA,MAAM,CAAC,EAAP,GAAY,WAAZ;AACA,MAAA,MAAM,CAAC,YAAP,CAAoB,cAApB,EAAoC,iBAApC;AACA,MAAA,QAAQ,CAAC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,WAAzC,CAAqD,MAArD;AACD;AAhEH;;AAAA;AAAA,EAAgC,YAAhC","sourceRoot":"","sourcesContent":["import { IfcComponent } from '../../base-types';\r\nexport class DropboxAPI extends IfcComponent {\r\n    constructor(context, loader) {\r\n        super(context);\r\n        this.onDBChooserSuccess = async (files) => {\r\n            const rawResponse = await fetch(files[0].link);\r\n            const result = await rawResponse.text();\r\n            const ifcBlob = new Blob([result], { type: 'text/plain' });\r\n            const file = new File([ifcBlob], 'ifcFile');\r\n            this.loader.loadIfc(file);\r\n        };\r\n        this.getOptions = () => {\r\n            return {\r\n                success: this.onDBChooserSuccess,\r\n                cancel: this.onDBChooserCancel,\r\n                linkType: 'direct',\r\n                multiselect: false,\r\n                extensions: ['.ifc'],\r\n                folderselect: false\r\n            };\r\n        };\r\n        this.loader = loader;\r\n        this.counter = 0;\r\n        this.initializeAPI();\r\n    }\r\n    loadDropboxIfc() {\r\n        this.openDropboxChooser(this.getOptions());\r\n    }\r\n    openDropboxChooser(options) {\r\n        try {\r\n            if (Dropbox) {\r\n                Dropbox.choose(this.getOptions());\r\n                return clearTimeout(this.tid);\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (this.counter++ > 9)\r\n                return this.errorOnConnection();\r\n            this.tid = setTimeout(() => this.openDropboxChooser(options), 2000);\r\n        }\r\n        return null;\r\n    }\r\n    errorOnConnection() {\r\n        console.error('Error: could not communicate with dropbox');\r\n        clearTimeout(this.tid);\r\n    }\r\n    onDBChooserCancel(_files) {\r\n        console.log('Canceled!');\r\n    }\r\n    initializeAPI() {\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://www.dropbox.com/static/api/2/dropins.js';\r\n        script.id = 'dropboxjs';\r\n        script.setAttribute('data-app-key', 'iej3z16hhyca35a');\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n    }\r\n}\r\n//# sourceMappingURL=dropbox.js.map"]},"metadata":{},"sourceType":"module"}