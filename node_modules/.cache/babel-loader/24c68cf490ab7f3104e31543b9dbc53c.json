{"ast":null,"code":"import { IfcComponent } from '../../base-types';\nexport class DropboxAPI extends IfcComponent {\n  constructor(context, loader) {\n    super(context);\n\n    this.onDBChooserSuccess = async files => {\n      const rawResponse = await fetch(files[0].link);\n      const result = await rawResponse.text();\n      const ifcBlob = new Blob([result], {\n        type: 'text/plain'\n      });\n      const file = new File([ifcBlob], 'ifcFile');\n      this.loader.loadIfc(file);\n    };\n\n    this.getOptions = () => {\n      return {\n        success: this.onDBChooserSuccess,\n        cancel: this.onDBChooserCancel,\n        linkType: 'direct',\n        multiselect: false,\n        extensions: ['.ifc'],\n        folderselect: false\n      };\n    };\n\n    this.loader = loader;\n    this.counter = 0;\n    this.initializeAPI();\n  }\n\n  loadDropboxIfc() {\n    this.openDropboxChooser(this.getOptions());\n  }\n\n  openDropboxChooser(options) {\n    try {\n      if (Dropbox) {\n        Dropbox.choose(this.getOptions());\n        return clearTimeout(this.tid);\n      }\n    } catch (error) {\n      if (this.counter++ > 9) return this.errorOnConnection();\n      this.tid = setTimeout(() => this.openDropboxChooser(options), 2000);\n    }\n\n    return null;\n  }\n\n  errorOnConnection() {\n    console.error('Error: could not communicate with dropbox');\n    clearTimeout(this.tid);\n  }\n\n  onDBChooserCancel(_files) {\n    console.log('Canceled!');\n  }\n\n  initializeAPI() {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://www.dropbox.com/static/api/2/dropins.js';\n    script.id = 'dropboxjs';\n    script.setAttribute('data-app-key', 'iej3z16hhyca35a');\n    document.getElementsByTagName('head')[0].appendChild(script);\n  }\n\n}","map":{"version":3,"sources":["../../../src/components/import-export/dropbox.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAAsC,kBAAtC;AAeA,OAAM,MAAO,UAAP,SAA0B,YAA1B,CAAsC;AAK1C,EAAA,WAAA,CAAY,OAAZ,EAA8B,MAA9B,EAAgD;AAC9C,UAAM,OAAN;;AA4BM,SAAA,kBAAA,GAAqB,MAAO,KAAP,IAAqC;AAChE,YAAM,WAAW,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,CAAD,CAAL,CAAS,IAAV,CAA/B;AACA,YAAM,MAAM,GAAG,MAAM,WAAW,CAAC,IAAZ,EAArB;AACA,YAAM,OAAO,GAAG,IAAI,IAAJ,CAAS,CAAC,MAAD,CAAT,EAAmB;AAAE,QAAA,IAAI,EAAE;AAAR,OAAnB,CAAhB;AACA,YAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,CAAC,OAAD,CAAT,EAAoB,SAApB,CAAb;AACA,WAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB;AACD,KANO;;AAQA,SAAA,UAAA,GAAa,MAAK;AACxB,aAAO;AACL,QAAA,OAAO,EAAE,KAAK,kBADT;AAEL,QAAA,MAAM,EAAE,KAAK,iBAFR;AAGL,QAAA,QAAQ,EAAE,QAHL;AAIL,QAAA,WAAW,EAAE,KAJR;AAKL,QAAA,UAAU,EAAE,CAAC,MAAD,CALP;AAML,QAAA,YAAY,EAAE;AANT,OAAP;AAQD,KATO;;AAnCN,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,OAAL,GAAe,CAAf;AACA,SAAK,aAAL;AACD;;AAED,EAAA,cAAc,GAAA;AACZ,SAAK,kBAAL,CAAwB,KAAK,UAAL,EAAxB;AACD;;AAED,EAAA,kBAAkB,CAAC,OAAD,EAAa;AAC7B,QAAI;AACF,UAAI,OAAJ,EAAa;AACX,QAAA,OAAO,CAAC,MAAR,CAAe,KAAK,UAAL,EAAf;AACA,eAAO,YAAY,CAAC,KAAK,GAAN,CAAnB;AACD;AACF,KALD,CAKE,OAAO,KAAP,EAAc;AACd,UAAI,KAAK,OAAL,KAAiB,CAArB,EAAwB,OAAO,KAAK,iBAAL,EAAP;AACxB,WAAK,GAAL,GAAW,UAAU,CAAC,MAAM,KAAK,kBAAL,CAAwB,OAAxB,CAAP,EAAyC,IAAzC,CAArB;AACD;;AACD,WAAO,IAAP;AACD;;AAEO,EAAA,iBAAiB,GAAA;AACvB,IAAA,OAAO,CAAC,KAAR,CAAc,2CAAd;AACA,IAAA,YAAY,CAAC,KAAK,GAAN,CAAZ;AACD;;AAqBO,EAAA,iBAAiB,CAAC,MAAD,EAA4B;AACnD,IAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD;;AAEO,EAAA,aAAa,GAAA;AACnB,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,IAAA,MAAM,CAAC,IAAP,GAAc,iBAAd;AACA,IAAA,MAAM,CAAC,GAAP,GAAa,iDAAb;AACA,IAAA,MAAM,CAAC,EAAP,GAAY,WAAZ;AACA,IAAA,MAAM,CAAC,YAAP,CAAoB,cAApB,EAAoC,iBAApC;AACA,IAAA,QAAQ,CAAC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,WAAzC,CAAqD,MAArD;AACD;;AAhEyC","sourceRoot":"","sourcesContent":["import { IfcComponent } from '../../base-types';\r\nexport class DropboxAPI extends IfcComponent {\r\n    constructor(context, loader) {\r\n        super(context);\r\n        this.onDBChooserSuccess = async (files) => {\r\n            const rawResponse = await fetch(files[0].link);\r\n            const result = await rawResponse.text();\r\n            const ifcBlob = new Blob([result], { type: 'text/plain' });\r\n            const file = new File([ifcBlob], 'ifcFile');\r\n            this.loader.loadIfc(file);\r\n        };\r\n        this.getOptions = () => {\r\n            return {\r\n                success: this.onDBChooserSuccess,\r\n                cancel: this.onDBChooserCancel,\r\n                linkType: 'direct',\r\n                multiselect: false,\r\n                extensions: ['.ifc'],\r\n                folderselect: false\r\n            };\r\n        };\r\n        this.loader = loader;\r\n        this.counter = 0;\r\n        this.initializeAPI();\r\n    }\r\n    loadDropboxIfc() {\r\n        this.openDropboxChooser(this.getOptions());\r\n    }\r\n    openDropboxChooser(options) {\r\n        try {\r\n            if (Dropbox) {\r\n                Dropbox.choose(this.getOptions());\r\n                return clearTimeout(this.tid);\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (this.counter++ > 9)\r\n                return this.errorOnConnection();\r\n            this.tid = setTimeout(() => this.openDropboxChooser(options), 2000);\r\n        }\r\n        return null;\r\n    }\r\n    errorOnConnection() {\r\n        console.error('Error: could not communicate with dropbox');\r\n        clearTimeout(this.tid);\r\n    }\r\n    onDBChooserCancel(_files) {\r\n        console.log('Canceled!');\r\n    }\r\n    initializeAPI() {\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://www.dropbox.com/static/api/2/dropins.js';\r\n        script.id = 'dropboxjs';\r\n        script.setAttribute('data-app-key', 'iej3z16hhyca35a');\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n    }\r\n}\r\n//# sourceMappingURL=dropbox.js.map"]},"metadata":{},"sourceType":"module"}