{"ast":null,"code":"import { Vector2 } from 'three';\nimport { IfcComponent } from '../../base-types';\nexport class IfcMouse extends IfcComponent {\n  constructor(context) {\n    super(context);\n    this.position = new Vector2();\n    this.setupMousePositionUpdate(context);\n  }\n\n  setupMousePositionUpdate(context) {\n    const domElement = context.getRenderer().domElement;\n\n    domElement.onmousemove = event => {\n      const bounds = domElement.getBoundingClientRect();\n      this.position.x = (event.clientX - bounds.left) / (bounds.right - bounds.left) * 2 - 1;\n      this.position.y = -((event.clientY - bounds.top) / (bounds.bottom - bounds.top)) * 2 + 1;\n    };\n  }\n\n}","map":{"version":3,"sources":["../../../src/components/context/mouse.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,OAAxB;AACA,SAAS,YAAT,QAAsC,kBAAtC;AAEA,OAAM,MAAO,QAAP,SAAwB,YAAxB,CAAoC;AAGxC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN;AACA,SAAK,QAAL,GAAgB,IAAI,OAAJ,EAAhB;AACA,SAAK,wBAAL,CAA8B,OAA9B;AACD;;AAEO,EAAA,wBAAwB,CAAC,OAAD,EAAiB;AAC/C,UAAM,UAAU,GAAG,OAAO,CAAC,WAAR,GAAsB,UAAzC;;AACA,IAAA,UAAU,CAAC,WAAX,GAA0B,KAAD,IAAsB;AAC7C,YAAM,MAAM,GAAG,UAAU,CAAC,qBAAX,EAAf;AACA,WAAK,QAAL,CAAc,CAAd,GAAmB,CAAC,KAAK,CAAC,OAAN,GAAgB,MAAM,CAAC,IAAxB,KAAiC,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,IAAvD,CAAD,GAAiE,CAAjE,GAAqE,CAAvF;AACA,WAAK,QAAL,CAAc,CAAd,GAAkB,EAAE,CAAC,KAAK,CAAC,OAAN,GAAgB,MAAM,CAAC,GAAxB,KAAgC,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,GAAvD,CAAF,IAAiE,CAAjE,GAAqE,CAAvF;AACD,KAJD;AAKD;;AAhBuC","sourceRoot":"","sourcesContent":["import { Vector2 } from 'three';\r\nimport { IfcComponent } from '../../base-types';\r\nexport class IfcMouse extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.position = new Vector2();\r\n        this.setupMousePositionUpdate(context);\r\n    }\r\n    setupMousePositionUpdate(context) {\r\n        const domElement = context.getRenderer().domElement;\r\n        domElement.onmousemove = (event) => {\r\n            const bounds = domElement.getBoundingClientRect();\r\n            this.position.x = ((event.clientX - bounds.left) / (bounds.right - bounds.left)) * 2 - 1;\r\n            this.position.y = -((event.clientY - bounds.top) / (bounds.bottom - bounds.top)) * 2 + 1;\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=mouse.js.map"]},"metadata":{},"sourceType":"module"}