{"ast":null,"code":"import _classCallCheck from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BoxGeometry, BufferGeometry, CylinderGeometry, DoubleSide, Euler, Float32BufferAttribute, Line, LineBasicMaterial, Matrix4, Mesh, MeshBasicMaterial, Object3D, OctahedronGeometry, PlaneGeometry, Quaternion, Raycaster, SphereGeometry, TorusGeometry, Vector3 } from 'three';\n\nvar _raycaster = new Raycaster();\n\nvar _tempVector = new Vector3();\n\nvar _tempVector2 = new Vector3();\n\nvar _tempQuaternion = new Quaternion();\n\nvar _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1)\n};\nvar _changeEvent = {\n  type: 'change'\n};\nvar _mouseDownEvent = {\n  type: 'mouseDown'\n};\nvar _mouseUpEvent = {\n  type: 'mouseUp',\n  mode: null\n};\nvar _objectChangeEvent = {\n  type: 'objectChange'\n};\n\nvar TransformControls = /*#__PURE__*/function (_Object3D) {\n  _inherits(TransformControls, _Object3D);\n\n  var _super = _createSuper(TransformControls);\n\n  function TransformControls(camera, domElement) {\n    var _this;\n\n    _classCallCheck(this, TransformControls);\n\n    _this = _super.call(this);\n\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      domElement = document;\n    }\n\n    _this.visible = false;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    var _gizmo = new TransformControlsGizmo();\n\n    _this._gizmo = _gizmo;\n\n    _this.add(_gizmo);\n\n    var _plane = new TransformControlsPlane();\n\n    _this._plane = _plane;\n\n    _this.add(_plane);\n\n    var scope = _assertThisInitialized(_this); // Defined getter, setter and store for a property\n\n\n    function defineProperty(propName, defaultValue) {\n      var propValue = defaultValue;\n      Object.defineProperty(scope, propName, {\n        get: function get() {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function set(value) {\n          if (propValue !== value) {\n            propValue = value;\n            _plane[propName] = value;\n            _gizmo[propName] = value;\n            scope.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            scope.dispatchEvent(_changeEvent);\n          }\n        }\n      });\n      scope[propName] = defaultValue;\n      _plane[propName] = defaultValue;\n      _gizmo[propName] = defaultValue;\n    } // Define properties with getters/setter\n    // Setting the defined property will automatically trigger change event\n    // Defined properties are passed down to gizmo and plane\n\n\n    defineProperty('camera', camera);\n    defineProperty('object', undefined);\n    defineProperty('enabled', true);\n    defineProperty('axis', null);\n    defineProperty('mode', 'translate');\n    defineProperty('translationSnap', null);\n    defineProperty('rotationSnap', null);\n    defineProperty('scaleSnap', null);\n    defineProperty('space', 'world');\n    defineProperty('size', 1);\n    defineProperty('dragging', false);\n    defineProperty('showX', true);\n    defineProperty('showY', true);\n    defineProperty('showZ', true); // Reusable utility variables\n\n    var worldPosition = new Vector3();\n    var worldPositionStart = new Vector3();\n    var worldQuaternion = new Quaternion();\n    var worldQuaternionStart = new Quaternion();\n    var cameraPosition = new Vector3();\n    var cameraQuaternion = new Quaternion();\n    var pointStart = new Vector3();\n    var pointEnd = new Vector3();\n    var rotationAxis = new Vector3();\n    var rotationAngle = 0;\n    var eye = new Vector3(); // TODO: remove properties unused in plane and gizmo\n\n    defineProperty('worldPosition', worldPosition);\n    defineProperty('worldPositionStart', worldPositionStart);\n    defineProperty('worldQuaternion', worldQuaternion);\n    defineProperty('worldQuaternionStart', worldQuaternionStart);\n    defineProperty('cameraPosition', cameraPosition);\n    defineProperty('cameraQuaternion', cameraQuaternion);\n    defineProperty('pointStart', pointStart);\n    defineProperty('pointEnd', pointEnd);\n    defineProperty('rotationAxis', rotationAxis);\n    defineProperty('rotationAngle', rotationAngle);\n    defineProperty('eye', eye);\n    _this._offset = new Vector3();\n    _this._startNorm = new Vector3();\n    _this._endNorm = new Vector3();\n    _this._cameraScale = new Vector3();\n    _this._parentPosition = new Vector3();\n    _this._parentQuaternion = new Quaternion();\n    _this._parentQuaternionInv = new Quaternion();\n    _this._parentScale = new Vector3();\n    _this._worldScaleStart = new Vector3();\n    _this._worldQuaternionInv = new Quaternion();\n    _this._worldScale = new Vector3();\n    _this._positionStart = new Vector3();\n    _this._quaternionStart = new Quaternion();\n    _this._scaleStart = new Vector3();\n    _this._getPointer = getPointer.bind(_assertThisInitialized(_this));\n    _this._onPointerDown = onPointerDown.bind(_assertThisInitialized(_this));\n    _this._onPointerHover = onPointerHover.bind(_assertThisInitialized(_this));\n    _this._onPointerMove = onPointerMove.bind(_assertThisInitialized(_this));\n    _this._onPointerUp = onPointerUp.bind(_assertThisInitialized(_this));\n\n    _this.domElement.addEventListener('pointerdown', _this._onPointerDown);\n\n    _this.domElement.addEventListener('pointermove', _this._onPointerHover);\n\n    _this.domElement.addEventListener('pointerup', _this._onPointerUp);\n\n    return _this;\n  } // updateMatrixWorld  updates key transformation variables\n\n\n  _createClass(TransformControls, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld() {\n      if (this.object !== undefined) {\n        this.object.updateMatrixWorld();\n\n        if (this.object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this.object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n        }\n\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this._worldScale);\n\n        this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n\n        this._worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this._cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n\n      _get(_getPrototypeOf(TransformControls.prototype), \"updateMatrixWorld\", this).call(this, this);\n    }\n  }, {\n    key: \"pointerHover\",\n    value: function pointerHover(pointer) {\n      if (this.object === undefined || this.dragging === true) return;\n\n      _raycaster.setFromCamera(pointer, this.camera);\n\n      var intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster);\n\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    }\n  }, {\n    key: \"pointerDown\",\n    value: function pointerDown(pointer) {\n      if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n\n      if (this.axis !== null) {\n        _raycaster.setFromCamera(pointer, this.camera);\n\n        var planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n\n        if (planeIntersect) {\n          this.object.updateMatrixWorld();\n          this.object.parent.updateMatrixWorld();\n\n          this._positionStart.copy(this.object.position);\n\n          this._quaternionStart.copy(this.object.quaternion);\n\n          this._scaleStart.copy(this.object.scale);\n\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n\n        this.dragging = true;\n        _mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(_mouseDownEvent);\n      }\n    }\n  }, {\n    key: \"pointerMove\",\n    value: function pointerMove(pointer) {\n      var axis = this.axis;\n      var mode = this.mode;\n      var object = this.object;\n      var space = this.space;\n\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n\n      if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n\n      _raycaster.setFromCamera(pointer, this.camera);\n\n      var planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n\n      if (mode === 'translate') {\n        // Apply translate\n        this._offset.copy(this.pointEnd).sub(this.pointStart);\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._worldQuaternionInv);\n        }\n\n        if (axis.indexOf('X') === -1) this._offset.x = 0;\n        if (axis.indexOf('Y') === -1) this._offset.y = 0;\n        if (axis.indexOf('Z') === -1) this._offset.z = 0;\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n        } else {\n          this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n        }\n\n        object.position.copy(this._offset).add(this._positionStart); // Apply translation snap\n\n        if (this.translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert());\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            object.position.applyQuaternion(this._quaternionStart);\n          }\n\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          var d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n\n          _tempVector2.set(d, d, d);\n        } else {\n          _tempVector.copy(this.pointStart);\n\n          _tempVector2.copy(this.pointEnd);\n\n          _tempVector.applyQuaternion(this._worldQuaternionInv);\n\n          _tempVector2.applyQuaternion(this._worldQuaternionInv);\n\n          _tempVector2.divide(_tempVector);\n\n          if (axis.search('X') === -1) {\n            _tempVector2.x = 1;\n          }\n\n          if (axis.search('Y') === -1) {\n            _tempVector2.y = 1;\n          }\n\n          if (axis.search('Z') === -1) {\n            _tempVector2.z = 1;\n          }\n        } // Apply scale\n\n\n        object.scale.copy(this._scaleStart).multiply(_tempVector2);\n\n        if (this.scaleSnap) {\n          if (axis.search('X') !== -1) {\n            object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this._offset.copy(this.pointEnd).sub(this.pointStart);\n\n        var ROTATION_SPEED = 20 / this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n\n        if (axis === 'E') {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n\n          this._startNorm.copy(this.pointStart).normalize();\n\n          this._endNorm.copy(this.pointEnd).normalize();\n\n          this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this.rotationAxis.copy(this._offset).cross(this.eye).normalize();\n          this.rotationAngle = this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this.rotationAxis.copy(_unit[axis]);\n\n          _tempVector.copy(_unit[axis]);\n\n          if (space === 'local') {\n            _tempVector.applyQuaternion(this.worldQuaternion);\n          }\n\n          this.rotationAngle = this._offset.dot(_tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n\n        if (this.rotationSnap) this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap; // Apply rotate\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this._quaternionStart);\n          object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this._parentQuaternionInv);\n          object.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this._quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(_changeEvent);\n      this.dispatchEvent(_objectChangeEvent);\n    }\n  }, {\n    key: \"pointerUp\",\n    value: function pointerUp(pointer) {\n      if (pointer.button !== 0) return;\n\n      if (this.dragging && this.axis !== null) {\n        _mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(_mouseUpEvent);\n      }\n\n      this.dragging = false;\n      this.axis = null;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.domElement.removeEventListener('pointerdown', this._onPointerDown);\n      this.domElement.removeEventListener('pointermove', this._onPointerHover);\n      this.domElement.removeEventListener('pointermove', this._onPointerMove);\n      this.domElement.removeEventListener('pointerup', this._onPointerUp);\n      this.traverse(function (child) {\n        if (child.geometry) child.geometry.dispose();\n        if (child.material) child.material.dispose();\n      });\n    } // Set current object\n\n  }, {\n    key: \"attach\",\n    value: function attach(object) {\n      this.object = object;\n      this.visible = true;\n      return this;\n    } // Detatch from object\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.object = undefined;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    }\n  }, {\n    key: \"getRaycaster\",\n    value: function getRaycaster() {\n      return _raycaster;\n    } // TODO: deprecate\n\n  }, {\n    key: \"getMode\",\n    value: function getMode() {\n      return this.mode;\n    }\n  }, {\n    key: \"setMode\",\n    value: function setMode(mode) {\n      this.mode = mode;\n    }\n  }, {\n    key: \"setTranslationSnap\",\n    value: function setTranslationSnap(translationSnap) {\n      this.translationSnap = translationSnap;\n    }\n  }, {\n    key: \"setRotationSnap\",\n    value: function setRotationSnap(rotationSnap) {\n      this.rotationSnap = rotationSnap;\n    }\n  }, {\n    key: \"setScaleSnap\",\n    value: function setScaleSnap(scaleSnap) {\n      this.scaleSnap = scaleSnap;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(size) {\n      this.size = size;\n    }\n  }, {\n    key: \"setSpace\",\n    value: function setSpace(space) {\n      this.space = space;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    }\n  }]);\n\n  return TransformControls;\n}(Object3D);\n\nTransformControls.prototype.isTransformControls = true; // mouse / touch event handlers\n\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button\n    };\n  } else {\n    var rect = this.domElement.getBoundingClientRect();\n    return {\n      x: (event.clientX - rect.left) / rect.width * 2 - 1,\n      y: -(event.clientY - rect.top) / rect.height * 2 + 1,\n      button: event.button\n    };\n  }\n}\n\nfunction onPointerHover(event) {\n  if (!this.enabled) return;\n\n  switch (event.pointerType) {\n    case 'mouse':\n    case 'pen':\n      this.pointerHover(this._getPointer(event));\n      break;\n  }\n}\n\nfunction onPointerDown(event) {\n  if (!this.enabled) return;\n  this.domElement.setPointerCapture(event.pointerId);\n  this.domElement.addEventListener('pointermove', this._onPointerMove);\n  this.pointerHover(this._getPointer(event));\n  this.pointerDown(this._getPointer(event));\n}\n\nfunction onPointerMove(event) {\n  if (!this.enabled) return;\n  this.pointerMove(this._getPointer(event));\n}\n\nfunction onPointerUp(event) {\n  if (!this.enabled) return;\n  this.domElement.releasePointerCapture(event.pointerId);\n  this.domElement.removeEventListener('pointermove', this._onPointerMove);\n  this.pointerUp(this._getPointer(event));\n}\n\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  var allIntersections = raycaster.intersectObject(object, true);\n\n  for (var i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i];\n    }\n  }\n\n  return false;\n} //\n// Reusable utility variables\n\n\nvar _tempEuler = new Euler();\n\nvar _alignVector = new Vector3(0, 1, 0);\n\nvar _zeroVector = new Vector3(0, 0, 0);\n\nvar _lookAtMatrix = new Matrix4();\n\nvar _tempQuaternion2 = new Quaternion();\n\nvar _identityQuaternion = new Quaternion();\n\nvar _dirVector = new Vector3();\n\nvar _tempMatrix = new Matrix4();\n\nvar _unitX = new Vector3(1, 0, 0);\n\nvar _unitY = new Vector3(0, 1, 0);\n\nvar _unitZ = new Vector3(0, 0, 1);\n\nvar _v1 = new Vector3();\n\nvar _v2 = new Vector3();\n\nvar _v3 = new Vector3();\n\nvar TransformControlsGizmo = /*#__PURE__*/function (_Object3D2) {\n  _inherits(TransformControlsGizmo, _Object3D2);\n\n  var _super2 = _createSuper(TransformControlsGizmo);\n\n  function TransformControlsGizmo() {\n    var _this2;\n\n    _classCallCheck(this, TransformControlsGizmo);\n\n    _this2 = _super2.call(this);\n    _this2.type = 'TransformControlsGizmo'; // shared materials\n\n    var gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    var gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    }); // Make unique material for each axis/color\n\n    var matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    var matHelper = gizmoLineMaterial.clone();\n    matHelper.opacity = 0.5;\n    var matRed = gizmoMaterial.clone();\n    matRed.color.setHex(0xff0000);\n    var matGreen = gizmoMaterial.clone();\n    matGreen.color.setHex(0x00ff00);\n    var matBlue = gizmoMaterial.clone();\n    matBlue.color.setHex(0x0000ff);\n    var matRedTransparent = gizmoMaterial.clone();\n    matRedTransparent.color.setHex(0xff0000);\n    matRedTransparent.opacity = 0.5;\n    var matGreenTransparent = gizmoMaterial.clone();\n    matGreenTransparent.color.setHex(0x00ff00);\n    matGreenTransparent.opacity = 0.5;\n    var matBlueTransparent = gizmoMaterial.clone();\n    matBlueTransparent.color.setHex(0x0000ff);\n    matBlueTransparent.opacity = 0.5;\n    var matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    var matYellowTransparent = gizmoMaterial.clone();\n    matYellowTransparent.color.setHex(0xffff00);\n    matYellowTransparent.opacity = 0.25;\n    var matYellow = gizmoMaterial.clone();\n    matYellow.color.setHex(0xffff00);\n    var matGray = gizmoMaterial.clone();\n    matGray.color.setHex(0x787878); // reusable geometry\n\n    var arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12);\n    arrowGeometry.translate(0, 0.05, 0);\n    var scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08);\n    scaleHandleGeometry.translate(0, 0.04, 0);\n    var lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    var lineGeometry2 = new CylinderGeometry(0.0075, 0.0075, 0.5, 3);\n    lineGeometry2.translate(0, 0.25, 0);\n\n    function CircleGeometry(radius, arc) {\n      var geometry = new TorusGeometry(radius, 0.0075, 3, 64, arc * Math.PI * 2);\n      geometry.rotateY(Math.PI / 2);\n      geometry.rotateX(Math.PI / 2);\n      return geometry;\n    } // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    function TranslateHelperGeometry() {\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    } // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    var gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]], [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]], [new Mesh(lineGeometry2, matGreen)]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    var pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    var helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    var gizmoRotate = {\n      XYZE: [[new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]],\n      X: [[new Mesh(CircleGeometry(0.5, 0.5), matRed)]],\n      Y: [[new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]],\n      Z: [[new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]],\n      E: [[new Mesh(CircleGeometry(0.75, 1), matYellowTransparent), null, [0, Math.PI / 2, 0]]]\n    };\n    var helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    var pickerRotate = {\n      XYZE: [[new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]],\n      X: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]]\n    };\n    var gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]], [new Mesh(lineGeometry2, matGreen)], [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]], [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]]\n    };\n    var pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]]\n    };\n    var helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n    function setupGizmo(gizmoMap) {\n      var gizmo = new Object3D();\n\n      for (var name in gizmoMap) {\n        for (var i = gizmoMap[name].length; i--;) {\n          var object = gizmoMap[name][i][0].clone();\n          var position = gizmoMap[name][i][1];\n          var rotation = gizmoMap[name][i][2];\n          var scale = gizmoMap[name][i][3];\n          var tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name;\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          var tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    } // Gizmo creation\n\n\n    _this2.gizmo = {};\n    _this2.picker = {};\n    _this2.helper = {};\n\n    _this2.add(_this2.gizmo['translate'] = setupGizmo(gizmoTranslate));\n\n    _this2.add(_this2.gizmo['rotate'] = setupGizmo(gizmoRotate));\n\n    _this2.add(_this2.gizmo['scale'] = setupGizmo(gizmoScale));\n\n    _this2.add(_this2.picker['translate'] = setupGizmo(pickerTranslate));\n\n    _this2.add(_this2.picker['rotate'] = setupGizmo(pickerRotate));\n\n    _this2.add(_this2.picker['scale'] = setupGizmo(pickerScale));\n\n    _this2.add(_this2.helper['translate'] = setupGizmo(helperTranslate));\n\n    _this2.add(_this2.helper['rotate'] = setupGizmo(helperRotate));\n\n    _this2.add(_this2.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n\n    _this2.picker['translate'].visible = false;\n    _this2.picker['rotate'].visible = false;\n    _this2.picker['scale'].visible = false;\n    return _this2;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n  _createClass(TransformControlsGizmo, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      var _this3 = this;\n\n      var space = this.mode === 'scale' ? 'local' : this.space; // scale always oriented to local rotation\n\n      var quaternion = space === 'local' ? this.worldQuaternion : _identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this.mode === 'translate';\n      this.gizmo['rotate'].visible = this.mode === 'rotate';\n      this.gizmo['scale'].visible = this.mode === 'scale';\n      this.helper['translate'].visible = this.mode === 'translate';\n      this.helper['rotate'].visible = this.mode === 'rotate';\n      this.helper['scale'].visible = this.mode === 'scale';\n      var handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n\n      var _loop = function _loop(i) {\n        var handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(_this3.worldPosition);\n        var factor = void 0;\n\n        if (_this3.camera.isOrthographicCamera) {\n          factor = (_this3.camera.top - _this3.camera.bottom) / _this3.camera.zoom;\n        } else {\n          factor = _this3.worldPosition.distanceTo(_this3.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * _this3.camera.fov / 360) / _this3.camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * _this3.size / 4); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n\n          if (handle.name === 'AXIS') {\n            handle.position.copy(_this3.worldPositionStart);\n            handle.visible = !!_this3.axis;\n\n            if (_this3.axis === 'X') {\n              _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0));\n\n              handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n              if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(_this3.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (_this3.axis === 'Y') {\n              _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2));\n\n              handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n              if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(_this3.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (_this3.axis === 'Z') {\n              _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n\n              handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n              if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(_this3.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (_this3.axis === 'XYZE') {\n              _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n\n              _alignVector.copy(_this3.rotationAxis);\n\n              handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY));\n              handle.quaternion.multiply(_tempQuaternion);\n              handle.visible = _this3.dragging;\n            }\n\n            if (_this3.axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(_this3.worldPositionStart);\n            handle.visible = _this3.dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(_this3.worldPosition);\n            handle.visible = _this3.dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(_this3.worldPositionStart);\n            handle.quaternion.copy(_this3.worldQuaternionStart);\n\n            _tempVector.set(1e-10, 1e-10, 1e-10).add(_this3.worldPositionStart).sub(_this3.worldPosition).multiplyScalar(-1);\n\n            _tempVector.applyQuaternion(_this3.worldQuaternionStart.clone().invert());\n\n            handle.scale.copy(_tempVector);\n            handle.visible = _this3.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (_this3.dragging) {\n              handle.position.copy(_this3.worldPositionStart);\n            } else {\n              handle.position.copy(_this3.worldPosition);\n            }\n\n            if (_this3.axis) {\n              handle.visible = _this3.axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n\n          return \"continue\";\n        } // Align handles to current local or world rotation\n\n\n        handle.quaternion.copy(quaternion);\n\n        if (_this3.mode === 'translate' || _this3.mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          var AXIS_HIDE_TRESHOLD = 0.99;\n          var PLANE_HIDE_TRESHOLD = 0.2;\n\n          if (handle.name === 'X') {\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(_this3.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Y') {\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(_this3.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Z') {\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(_this3.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XY') {\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(_this3.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'YZ') {\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(_this3.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XZ') {\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(_this3.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n        } else if (_this3.mode === 'rotate') {\n          // Align handles to current local or world rotation\n          _tempQuaternion2.copy(quaternion);\n\n          _alignVector.copy(_this3.eye).applyQuaternion(_tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_this3.eye, _zeroVector, _unitY));\n          }\n\n          if (handle.name === 'X') {\n            _tempQuaternion.setFromAxisAngle(_unitX, Math.atan2(-_alignVector.y, _alignVector.z));\n\n            _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n            handle.quaternion.copy(_tempQuaternion);\n          }\n\n          if (handle.name === 'Y') {\n            _tempQuaternion.setFromAxisAngle(_unitY, Math.atan2(_alignVector.x, _alignVector.z));\n\n            _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n            handle.quaternion.copy(_tempQuaternion);\n          }\n\n          if (handle.name === 'Z') {\n            _tempQuaternion.setFromAxisAngle(_unitZ, Math.atan2(_alignVector.y, _alignVector.x));\n\n            _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n            handle.quaternion.copy(_tempQuaternion);\n          }\n        } // Hide disabled axes\n\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || _this3.showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || _this3.showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || _this3.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || _this3.showX && _this3.showY && _this3.showZ); // highlight selected axis\n\n        handle.material._color = handle.material._color || handle.material.color.clone();\n        handle.material._opacity = handle.material._opacity || handle.material.opacity;\n        handle.material.color.copy(handle.material._color);\n        handle.material.opacity = handle.material._opacity;\n\n        if (_this3.enabled && _this3.axis) {\n          if (handle.name === _this3.axis) {\n            handle.material.color.setHex(0xffff00);\n            handle.material.opacity = 1.0;\n          } else if (_this3.axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            handle.material.color.setHex(0xffff00);\n            handle.material.opacity = 1.0;\n          }\n        }\n      };\n\n      for (var i = 0; i < handles.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      _get(_getPrototypeOf(TransformControlsGizmo.prototype), \"updateMatrixWorld\", this).call(this, force);\n    }\n  }]);\n\n  return TransformControlsGizmo;\n}(Object3D);\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true; //\n\nvar TransformControlsPlane = /*#__PURE__*/function (_Mesh) {\n  _inherits(TransformControlsPlane, _Mesh);\n\n  var _super3 = _createSuper(TransformControlsPlane);\n\n  function TransformControlsPlane() {\n    var _this4;\n\n    _classCallCheck(this, TransformControlsPlane);\n\n    _this4 = _super3.call(this, new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    _this4.type = 'TransformControlsPlane';\n    return _this4;\n  }\n\n  _createClass(TransformControlsPlane, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      var space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      _v1.copy(_unitX).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n\n      _v2.copy(_unitY).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n\n      _v3.copy(_unitZ).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n\n      _alignVector.copy(_v2);\n\n      switch (this.mode) {\n        case 'translate':\n        case 'scale':\n          switch (this.axis) {\n            case 'X':\n              _alignVector.copy(this.eye).cross(_v1);\n\n              _dirVector.copy(_v1).cross(_alignVector);\n\n              break;\n\n            case 'Y':\n              _alignVector.copy(this.eye).cross(_v2);\n\n              _dirVector.copy(_v2).cross(_alignVector);\n\n              break;\n\n            case 'Z':\n              _alignVector.copy(this.eye).cross(_v3);\n\n              _dirVector.copy(_v3).cross(_alignVector);\n\n              break;\n\n            case 'XY':\n              _dirVector.copy(_v3);\n\n              break;\n\n            case 'YZ':\n              _dirVector.copy(_v1);\n\n              break;\n\n            case 'XZ':\n              _alignVector.copy(_v3);\n\n              _dirVector.copy(_v2);\n\n              break;\n\n            case 'XYZ':\n            case 'E':\n              _dirVector.set(0, 0, 0);\n\n              break;\n          }\n\n          break;\n\n        case 'rotate':\n        default:\n          // special case for rotate\n          _dirVector.set(0, 0, 0);\n\n      }\n\n      if (_dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector);\n\n        this.quaternion.setFromRotationMatrix(_tempMatrix);\n      }\n\n      _get(_getPrototypeOf(TransformControlsPlane.prototype), \"updateMatrixWorld\", this).call(this, force);\n    }\n  }]);\n\n  return TransformControlsPlane;\n}(Mesh);\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"sources":["/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu’s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/three/examples/jsm/controls/TransformControls.js"],"names":["BoxGeometry","BufferGeometry","CylinderGeometry","DoubleSide","Euler","Float32BufferAttribute","Line","LineBasicMaterial","Matrix4","Mesh","MeshBasicMaterial","Object3D","OctahedronGeometry","PlaneGeometry","Quaternion","Raycaster","SphereGeometry","TorusGeometry","Vector3","_raycaster","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","_changeEvent","type","_mouseDownEvent","_mouseUpEvent","mode","_objectChangeEvent","TransformControls","camera","domElement","undefined","console","warn","document","visible","style","touchAction","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","rotationAngle","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","bind","_onPointerDown","onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","onPointerMove","_onPointerUp","onPointerUp","addEventListener","object","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","pointer","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","name","button","planeIntersect","position","quaternion","scale","point","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","rotationSnap","setFromAxisAngle","removeEventListener","traverse","child","geometry","dispose","material","size","prototype","isTransformControls","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","enabled","pointerType","pointerHover","setPointerCapture","pointerId","pointerDown","pointerMove","releasePointerCapture","pointerUp","raycaster","includeInvisible","allIntersections","intersectObject","i","_tempEuler","_alignVector","_zeroVector","_lookAtMatrix","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","gizmoMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matYellow","matGray","arrowGeometry","translate","scaleHandleGeometry","lineGeometry","setAttribute","lineGeometry2","CircleGeometry","radius","arc","PI","rotateY","rotateX","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","setFromEuler","abs","setFromRotationMatrix","lookAt","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","isTransformControlsGizmo","wireframe","side","isTransformControlsPlane"],"mappings":";;;;;;;AAAA,SACCA,WADD,EAECC,cAFD,EAGCC,gBAHD,EAICC,UAJD,EAKCC,KALD,EAMCC,sBAND,EAOCC,IAPD,EAQCC,iBARD,EASCC,OATD,EAUCC,IAVD,EAWCC,iBAXD,EAYCC,QAZD,EAaCC,kBAbD,EAcCC,aAdD,EAeCC,UAfD,EAgBCC,SAhBD,EAiBCC,cAjBD,EAkBCC,aAlBD,EAmBCC,OAnBD,QAoBO,OApBP;;AAsBA,IAAMC,UAAU,GAAG,IAAIJ,SAAJ,EAAnB;;AAEA,IAAMK,WAAW,GAAG,IAAIF,OAAJ,EAApB;;AACA,IAAMG,YAAY,GAAG,IAAIH,OAAJ,EAArB;;AACA,IAAMI,eAAe,GAAG,IAAIR,UAAJ,EAAxB;;AACA,IAAMS,KAAK,GAAG;AACbC,EAAAA,CAAC,EAAE,IAAIN,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADU;AAEbO,EAAAA,CAAC,EAAE,IAAIP,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAFU;AAGbQ,EAAAA,CAAC,EAAE,IAAIR,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;AAHU,CAAd;AAMA,IAAMS,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;AACA,IAAMC,eAAe,GAAG;AAAED,EAAAA,IAAI,EAAE;AAAR,CAAxB;AACA,IAAME,aAAa,GAAG;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBG,EAAAA,IAAI,EAAE;AAAzB,CAAtB;AACA,IAAMC,kBAAkB,GAAG;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAA3B;;IAEMK,iB;;;;;AAEL,6BAAaC,MAAb,EAAqBC,UAArB,EAAkC;AAAA;;AAAA;;AAEjC;;AAEA,QAAKA,UAAU,KAAKC,SAApB,EAAgC;AAE/BC,MAAAA,OAAO,CAACC,IAAR,CAAc,8EAAd;AACAH,MAAAA,UAAU,GAAGI,QAAb;AAEA;;AAED,UAAKC,OAAL,GAAe,KAAf;AACA,UAAKL,UAAL,GAAkBA,UAAlB;AACA,UAAKA,UAAL,CAAgBM,KAAhB,CAAsBC,WAAtB,GAAoC,MAApC,CAbiC,CAaW;;AAE5C,QAAMC,MAAM,GAAG,IAAIC,sBAAJ,EAAf;;AACA,UAAKD,MAAL,GAAcA,MAAd;;AACA,UAAKE,GAAL,CAAUF,MAAV;;AAEA,QAAMG,MAAM,GAAG,IAAIC,sBAAJ,EAAf;;AACA,UAAKD,MAAL,GAAcA,MAAd;;AACA,UAAKD,GAAL,CAAUC,MAAV;;AAEA,QAAME,KAAK,gCAAX,CAvBiC,CAyBjC;;;AACA,aAASC,cAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAkD;AAEjD,UAAIC,SAAS,GAAGD,YAAhB;AAEAE,MAAAA,MAAM,CAACJ,cAAP,CAAuBD,KAAvB,EAA8BE,QAA9B,EAAwC;AAEvCI,QAAAA,GAAG,EAAE,eAAY;AAEhB,iBAAOF,SAAS,KAAKhB,SAAd,GAA0BgB,SAA1B,GAAsCD,YAA7C;AAEA,SANsC;AAQvCI,QAAAA,GAAG,EAAE,aAAWC,KAAX,EAAmB;AAEvB,cAAKJ,SAAS,KAAKI,KAAnB,EAA2B;AAE1BJ,YAAAA,SAAS,GAAGI,KAAZ;AACAV,YAAAA,MAAM,CAAEI,QAAF,CAAN,GAAqBM,KAArB;AACAb,YAAAA,MAAM,CAAEO,QAAF,CAAN,GAAqBM,KAArB;AAEAR,YAAAA,KAAK,CAACS,aAAN,CAAqB;AAAE7B,cAAAA,IAAI,EAAEsB,QAAQ,GAAG,UAAnB;AAA+BM,cAAAA,KAAK,EAAEA;AAAtC,aAArB;AACAR,YAAAA,KAAK,CAACS,aAAN,CAAqB9B,YAArB;AAEA;AAED;AArBsC,OAAxC;AAyBAqB,MAAAA,KAAK,CAAEE,QAAF,CAAL,GAAoBC,YAApB;AACAL,MAAAA,MAAM,CAAEI,QAAF,CAAN,GAAqBC,YAArB;AACAR,MAAAA,MAAM,CAAEO,QAAF,CAAN,GAAqBC,YAArB;AAEA,KA3DgC,CA6DjC;AACA;AACA;;;AAEAF,IAAAA,cAAc,CAAE,QAAF,EAAYf,MAAZ,CAAd;AACAe,IAAAA,cAAc,CAAE,QAAF,EAAYb,SAAZ,CAAd;AACAa,IAAAA,cAAc,CAAE,SAAF,EAAa,IAAb,CAAd;AACAA,IAAAA,cAAc,CAAE,MAAF,EAAU,IAAV,CAAd;AACAA,IAAAA,cAAc,CAAE,MAAF,EAAU,WAAV,CAAd;AACAA,IAAAA,cAAc,CAAE,iBAAF,EAAqB,IAArB,CAAd;AACAA,IAAAA,cAAc,CAAE,cAAF,EAAkB,IAAlB,CAAd;AACAA,IAAAA,cAAc,CAAE,WAAF,EAAe,IAAf,CAAd;AACAA,IAAAA,cAAc,CAAE,OAAF,EAAW,OAAX,CAAd;AACAA,IAAAA,cAAc,CAAE,MAAF,EAAU,CAAV,CAAd;AACAA,IAAAA,cAAc,CAAE,UAAF,EAAc,KAAd,CAAd;AACAA,IAAAA,cAAc,CAAE,OAAF,EAAW,IAAX,CAAd;AACAA,IAAAA,cAAc,CAAE,OAAF,EAAW,IAAX,CAAd;AACAA,IAAAA,cAAc,CAAE,OAAF,EAAW,IAAX,CAAd,CA9EiC,CAgFjC;;AAEA,QAAMS,aAAa,GAAG,IAAIxC,OAAJ,EAAtB;AACA,QAAMyC,kBAAkB,GAAG,IAAIzC,OAAJ,EAA3B;AACA,QAAM0C,eAAe,GAAG,IAAI9C,UAAJ,EAAxB;AACA,QAAM+C,oBAAoB,GAAG,IAAI/C,UAAJ,EAA7B;AACA,QAAMgD,cAAc,GAAG,IAAI5C,OAAJ,EAAvB;AACA,QAAM6C,gBAAgB,GAAG,IAAIjD,UAAJ,EAAzB;AACA,QAAMkD,UAAU,GAAG,IAAI9C,OAAJ,EAAnB;AACA,QAAM+C,QAAQ,GAAG,IAAI/C,OAAJ,EAAjB;AACA,QAAMgD,YAAY,GAAG,IAAIhD,OAAJ,EAArB;AACA,QAAMiD,aAAa,GAAG,CAAtB;AACA,QAAMC,GAAG,GAAG,IAAIlD,OAAJ,EAAZ,CA5FiC,CA8FjC;;AAEA+B,IAAAA,cAAc,CAAE,eAAF,EAAmBS,aAAnB,CAAd;AACAT,IAAAA,cAAc,CAAE,oBAAF,EAAwBU,kBAAxB,CAAd;AACAV,IAAAA,cAAc,CAAE,iBAAF,EAAqBW,eAArB,CAAd;AACAX,IAAAA,cAAc,CAAE,sBAAF,EAA0BY,oBAA1B,CAAd;AACAZ,IAAAA,cAAc,CAAE,gBAAF,EAAoBa,cAApB,CAAd;AACAb,IAAAA,cAAc,CAAE,kBAAF,EAAsBc,gBAAtB,CAAd;AACAd,IAAAA,cAAc,CAAE,YAAF,EAAgBe,UAAhB,CAAd;AACAf,IAAAA,cAAc,CAAE,UAAF,EAAcgB,QAAd,CAAd;AACAhB,IAAAA,cAAc,CAAE,cAAF,EAAkBiB,YAAlB,CAAd;AACAjB,IAAAA,cAAc,CAAE,eAAF,EAAmBkB,aAAnB,CAAd;AACAlB,IAAAA,cAAc,CAAE,KAAF,EAASmB,GAAT,CAAd;AAEA,UAAKC,OAAL,GAAe,IAAInD,OAAJ,EAAf;AACA,UAAKoD,UAAL,GAAkB,IAAIpD,OAAJ,EAAlB;AACA,UAAKqD,QAAL,GAAgB,IAAIrD,OAAJ,EAAhB;AACA,UAAKsD,YAAL,GAAoB,IAAItD,OAAJ,EAApB;AAEA,UAAKuD,eAAL,GAAuB,IAAIvD,OAAJ,EAAvB;AACA,UAAKwD,iBAAL,GAAyB,IAAI5D,UAAJ,EAAzB;AACA,UAAK6D,oBAAL,GAA4B,IAAI7D,UAAJ,EAA5B;AACA,UAAK8D,YAAL,GAAoB,IAAI1D,OAAJ,EAApB;AAEA,UAAK2D,gBAAL,GAAwB,IAAI3D,OAAJ,EAAxB;AACA,UAAK4D,mBAAL,GAA2B,IAAIhE,UAAJ,EAA3B;AACA,UAAKiE,WAAL,GAAmB,IAAI7D,OAAJ,EAAnB;AAEA,UAAK8D,cAAL,GAAsB,IAAI9D,OAAJ,EAAtB;AACA,UAAK+D,gBAAL,GAAwB,IAAInE,UAAJ,EAAxB;AACA,UAAKoE,WAAL,GAAmB,IAAIhE,OAAJ,EAAnB;AAEA,UAAKiE,WAAL,GAAmBC,UAAU,CAACC,IAAX,+BAAnB;AACA,UAAKC,cAAL,GAAsBC,aAAa,CAACF,IAAd,+BAAtB;AACA,UAAKG,eAAL,GAAuBC,cAAc,CAACJ,IAAf,+BAAvB;AACA,UAAKK,cAAL,GAAsBC,aAAa,CAACN,IAAd,+BAAtB;AACA,UAAKO,YAAL,GAAoBC,WAAW,CAACR,IAAZ,+BAApB;;AAEA,UAAKlD,UAAL,CAAgB2D,gBAAhB,CAAkC,aAAlC,EAAiD,MAAKR,cAAtD;;AACA,UAAKnD,UAAL,CAAgB2D,gBAAhB,CAAkC,aAAlC,EAAiD,MAAKN,eAAtD;;AACA,UAAKrD,UAAL,CAAgB2D,gBAAhB,CAAkC,WAAlC,EAA+C,MAAKF,YAApD;;AAtIiC;AAwIjC,G,CAED;;;;;WACA,6BAAoB;AAEnB,UAAK,KAAKG,MAAL,KAAgB3D,SAArB,EAAiC;AAEhC,aAAK2D,MAAL,CAAYC,iBAAZ;;AAEA,YAAK,KAAKD,MAAL,CAAYE,MAAZ,KAAuB,IAA5B,EAAmC;AAElC5D,UAAAA,OAAO,CAAC6D,KAAR,CAAe,8EAAf;AAEA,SAJD,MAIO;AAEN,eAAKH,MAAL,CAAYE,MAAZ,CAAmBE,WAAnB,CAA+BC,SAA/B,CAA0C,KAAK3B,eAA/C,EAAgE,KAAKC,iBAArE,EAAwF,KAAKE,YAA7F;AAEA;;AAED,aAAKmB,MAAL,CAAYI,WAAZ,CAAwBC,SAAxB,CAAmC,KAAK1C,aAAxC,EAAuD,KAAKE,eAA5D,EAA6E,KAAKmB,WAAlF;;AAEA,aAAKJ,oBAAL,CAA0B0B,IAA1B,CAAgC,KAAK3B,iBAArC,EAAyD4B,MAAzD;;AACA,aAAKxB,mBAAL,CAAyBuB,IAAzB,CAA+B,KAAKzC,eAApC,EAAsD0C,MAAtD;AAEA;;AAED,WAAKpE,MAAL,CAAY8D,iBAAZ;AACA,WAAK9D,MAAL,CAAYiE,WAAZ,CAAwBC,SAAxB,CAAmC,KAAKtC,cAAxC,EAAwD,KAAKC,gBAA7D,EAA+E,KAAKS,YAApF;AAEA,WAAKJ,GAAL,CAASiC,IAAT,CAAe,KAAKvC,cAApB,EAAqCyC,GAArC,CAA0C,KAAK7C,aAA/C,EAA+D8C,SAA/D;;AAEA,+FAAyB,IAAzB;AAEA;;;WAED,sBAAcC,OAAd,EAAwB;AAEvB,UAAK,KAAKV,MAAL,KAAgB3D,SAAhB,IAA6B,KAAKsE,QAAL,KAAkB,IAApD,EAA2D;;AAE3DvF,MAAAA,UAAU,CAACwF,aAAX,CAA0BF,OAA1B,EAAmC,KAAKvE,MAAxC;;AAEA,UAAM0E,SAAS,GAAGC,sBAAsB,CAAE,KAAKlE,MAAL,CAAYmE,MAAZ,CAAoB,KAAK/E,IAAzB,CAAF,EAAmCZ,UAAnC,CAAxC;;AAEA,UAAKyF,SAAL,EAAiB;AAEhB,aAAKG,IAAL,GAAYH,SAAS,CAACb,MAAV,CAAiBiB,IAA7B;AAEA,OAJD,MAIO;AAEN,aAAKD,IAAL,GAAY,IAAZ;AAEA;AAED;;;WAED,qBAAaN,OAAb,EAAuB;AAEtB,UAAK,KAAKV,MAAL,KAAgB3D,SAAhB,IAA6B,KAAKsE,QAAL,KAAkB,IAA/C,IAAuDD,OAAO,CAACQ,MAAR,KAAmB,CAA/E,EAAmF;;AAEnF,UAAK,KAAKF,IAAL,KAAc,IAAnB,EAA0B;AAEzB5F,QAAAA,UAAU,CAACwF,aAAX,CAA0BF,OAA1B,EAAmC,KAAKvE,MAAxC;;AAEA,YAAMgF,cAAc,GAAGL,sBAAsB,CAAE,KAAK/D,MAAP,EAAe3B,UAAf,EAA2B,IAA3B,CAA7C;;AAEA,YAAK+F,cAAL,EAAsB;AAErB,eAAKnB,MAAL,CAAYC,iBAAZ;AACA,eAAKD,MAAL,CAAYE,MAAZ,CAAmBD,iBAAnB;;AAEA,eAAKhB,cAAL,CAAoBqB,IAApB,CAA0B,KAAKN,MAAL,CAAYoB,QAAtC;;AACA,eAAKlC,gBAAL,CAAsBoB,IAAtB,CAA4B,KAAKN,MAAL,CAAYqB,UAAxC;;AACA,eAAKlC,WAAL,CAAiBmB,IAAjB,CAAuB,KAAKN,MAAL,CAAYsB,KAAnC;;AAEA,eAAKtB,MAAL,CAAYI,WAAZ,CAAwBC,SAAxB,CAAmC,KAAKzC,kBAAxC,EAA4D,KAAKE,oBAAjE,EAAuF,KAAKgB,gBAA5F;AAEA,eAAKb,UAAL,CAAgBqC,IAAhB,CAAsBa,cAAc,CAACI,KAArC,EAA6Cf,GAA7C,CAAkD,KAAK5C,kBAAvD;AAEA;;AAED,aAAK+C,QAAL,GAAgB,IAAhB;AACA7E,QAAAA,eAAe,CAACE,IAAhB,GAAuB,KAAKA,IAA5B;AACA,aAAK0B,aAAL,CAAoB5B,eAApB;AAEA;AAED;;;WAED,qBAAa4E,OAAb,EAAuB;AAEtB,UAAMM,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMhF,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMgE,MAAM,GAAG,KAAKA,MAApB;AACA,UAAIwB,KAAK,GAAG,KAAKA,KAAjB;;AAEA,UAAKxF,IAAI,KAAK,OAAd,EAAwB;AAEvBwF,QAAAA,KAAK,GAAG,OAAR;AAEA,OAJD,MAIO,IAAKR,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,MAAzB,IAAmCA,IAAI,KAAK,KAAjD,EAAyD;AAE/DQ,QAAAA,KAAK,GAAG,OAAR;AAEA;;AAED,UAAKxB,MAAM,KAAK3D,SAAX,IAAwB2E,IAAI,KAAK,IAAjC,IAAyC,KAAKL,QAAL,KAAkB,KAA3D,IAAoED,OAAO,CAACQ,MAAR,KAAmB,CAAE,CAA9F,EAAkG;;AAElG9F,MAAAA,UAAU,CAACwF,aAAX,CAA0BF,OAA1B,EAAmC,KAAKvE,MAAxC;;AAEA,UAAMgF,cAAc,GAAGL,sBAAsB,CAAE,KAAK/D,MAAP,EAAe3B,UAAf,EAA2B,IAA3B,CAA7C;AAEA,UAAK,CAAE+F,cAAP,EAAwB;AAExB,WAAKjD,QAAL,CAAcoC,IAAd,CAAoBa,cAAc,CAACI,KAAnC,EAA2Cf,GAA3C,CAAgD,KAAK5C,kBAArD;;AAEA,UAAK5B,IAAI,KAAK,WAAd,EAA4B;AAE3B;AAEA,aAAKsC,OAAL,CAAagC,IAAb,CAAmB,KAAKpC,QAAxB,EAAmCsC,GAAnC,CAAwC,KAAKvC,UAA7C;;AAEA,YAAKuD,KAAK,KAAK,OAAV,IAAqBR,IAAI,KAAK,KAAnC,EAA2C;AAE1C,eAAK1C,OAAL,CAAamD,eAAb,CAA8B,KAAK1C,mBAAnC;AAEA;;AAED,YAAKiC,IAAI,CAACU,OAAL,CAAc,GAAd,MAAwB,CAAE,CAA/B,EAAmC,KAAKpD,OAAL,CAAaqD,CAAb,GAAiB,CAAjB;AACnC,YAAKX,IAAI,CAACU,OAAL,CAAc,GAAd,MAAwB,CAAE,CAA/B,EAAmC,KAAKpD,OAAL,CAAasD,CAAb,GAAiB,CAAjB;AACnC,YAAKZ,IAAI,CAACU,OAAL,CAAc,GAAd,MAAwB,CAAE,CAA/B,EAAmC,KAAKpD,OAAL,CAAauD,CAAb,GAAiB,CAAjB;;AAEnC,YAAKL,KAAK,KAAK,OAAV,IAAqBR,IAAI,KAAK,KAAnC,EAA2C;AAE1C,eAAK1C,OAAL,CAAamD,eAAb,CAA8B,KAAKvC,gBAAnC,EAAsD4C,MAAtD,CAA8D,KAAKjD,YAAnE;AAEA,SAJD,MAIO;AAEN,eAAKP,OAAL,CAAamD,eAAb,CAA8B,KAAK7C,oBAAnC,EAA0DkD,MAA1D,CAAkE,KAAKjD,YAAvE;AAEA;;AAEDmB,QAAAA,MAAM,CAACoB,QAAP,CAAgBd,IAAhB,CAAsB,KAAKhC,OAA3B,EAAqCxB,GAArC,CAA0C,KAAKmC,cAA/C,EA1B2B,CA4B3B;;AAEA,YAAK,KAAK8C,eAAV,EAA4B;AAE3B,cAAKP,KAAK,KAAK,OAAf,EAAyB;AAExBxB,YAAAA,MAAM,CAACoB,QAAP,CAAgBK,eAAhB,CAAiClG,eAAe,CAAC+E,IAAhB,CAAsB,KAAKpB,gBAA3B,EAA8CqB,MAA9C,EAAjC;;AAEA,gBAAKS,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBO,CAAhB,GAAoBM,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBO,CAAhB,GAAoB,KAAKI,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED,gBAAKf,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBQ,CAAhB,GAAoBK,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBQ,CAAhB,GAAoB,KAAKG,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED,gBAAKf,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBS,CAAhB,GAAoBI,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBS,CAAhB,GAAoB,KAAKE,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED/B,YAAAA,MAAM,CAACoB,QAAP,CAAgBK,eAAhB,CAAiC,KAAKvC,gBAAtC;AAEA;;AAED,cAAKsC,KAAK,KAAK,OAAf,EAAyB;AAExB,gBAAKxB,MAAM,CAACE,MAAZ,EAAqB;AAEpBF,cAAAA,MAAM,CAACoB,QAAP,CAAgBtE,GAAhB,CAAqBzB,WAAW,CAAC8G,qBAAZ,CAAmCnC,MAAM,CAACE,MAAP,CAAcE,WAAjD,CAArB;AAEA;;AAED,gBAAKY,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBO,CAAhB,GAAoBM,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBO,CAAhB,GAAoB,KAAKI,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED,gBAAKf,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBQ,CAAhB,GAAoBK,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBQ,CAAhB,GAAoB,KAAKG,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED,gBAAKf,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,cAAAA,MAAM,CAACoB,QAAP,CAAgBS,CAAhB,GAAoBI,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACoB,QAAP,CAAgBS,CAAhB,GAAoB,KAAKE,eAArC,IAAyD,KAAKA,eAAlF;AAEA;;AAED,gBAAK/B,MAAM,CAACE,MAAZ,EAAqB;AAEpBF,cAAAA,MAAM,CAACoB,QAAP,CAAgBZ,GAAhB,CAAqBnF,WAAW,CAAC8G,qBAAZ,CAAmCnC,MAAM,CAACE,MAAP,CAAcE,WAAjD,CAArB;AAEA;AAED;AAED;AAED,OA9FD,MA8FO,IAAKpE,IAAI,KAAK,OAAd,EAAwB;AAE9B,YAAKgF,IAAI,CAACgB,MAAL,CAAa,KAAb,MAAyB,CAAE,CAAhC,EAAoC;AAEnC,cAAII,CAAC,GAAG,KAAKlE,QAAL,CAAcmE,MAAd,KAAyB,KAAKpE,UAAL,CAAgBoE,MAAhB,EAAjC;AAEA,cAAK,KAAKnE,QAAL,CAAcoE,GAAd,CAAmB,KAAKrE,UAAxB,IAAuC,CAA5C,EAAgDmE,CAAC,IAAI,CAAE,CAAP;;AAEhD9G,UAAAA,YAAY,CAACkC,GAAb,CAAkB4E,CAAlB,EAAqBA,CAArB,EAAwBA,CAAxB;AAEA,SARD,MAQO;AAEN/G,UAAAA,WAAW,CAACiF,IAAZ,CAAkB,KAAKrC,UAAvB;;AACA3C,UAAAA,YAAY,CAACgF,IAAb,CAAmB,KAAKpC,QAAxB;;AAEA7C,UAAAA,WAAW,CAACoG,eAAZ,CAA6B,KAAK1C,mBAAlC;;AACAzD,UAAAA,YAAY,CAACmG,eAAb,CAA8B,KAAK1C,mBAAnC;;AAEAzD,UAAAA,YAAY,CAACwG,MAAb,CAAqBzG,WAArB;;AAEA,cAAK2F,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjC1G,YAAAA,YAAY,CAACqG,CAAb,GAAiB,CAAjB;AAEA;;AAED,cAAKX,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjC1G,YAAAA,YAAY,CAACsG,CAAb,GAAiB,CAAjB;AAEA;;AAED,cAAKZ,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjC1G,YAAAA,YAAY,CAACuG,CAAb,GAAiB,CAAjB;AAEA;AAED,SAtC6B,CAwC9B;;;AAEA7B,QAAAA,MAAM,CAACsB,KAAP,CAAahB,IAAb,CAAmB,KAAKnB,WAAxB,EAAsCoD,QAAtC,CAAgDjH,YAAhD;;AAEA,YAAK,KAAKkH,SAAV,EAAsB;AAErB,cAAKxB,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,YAAAA,MAAM,CAACsB,KAAP,CAAaK,CAAb,GAAiBM,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACsB,KAAP,CAAaK,CAAb,GAAiB,KAAKa,SAAlC,IAAgD,KAAKA,SAArD,IAAkE,KAAKA,SAAxF;AAEA;;AAED,cAAKxB,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,YAAAA,MAAM,CAACsB,KAAP,CAAaM,CAAb,GAAiBK,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACsB,KAAP,CAAaM,CAAb,GAAiB,KAAKY,SAAlC,IAAgD,KAAKA,SAArD,IAAkE,KAAKA,SAAxF;AAEA;;AAED,cAAKxB,IAAI,CAACgB,MAAL,CAAa,GAAb,MAAuB,CAAE,CAA9B,EAAkC;AAEjChC,YAAAA,MAAM,CAACsB,KAAP,CAAaO,CAAb,GAAiBI,IAAI,CAACC,KAAL,CAAYlC,MAAM,CAACsB,KAAP,CAAaO,CAAb,GAAiB,KAAKW,SAAlC,IAAgD,KAAKA,SAArD,IAAkE,KAAKA,SAAxF;AAEA;AAED;AAED,OAlEM,MAkEA,IAAKxG,IAAI,KAAK,QAAd,EAAyB;AAE/B,aAAKsC,OAAL,CAAagC,IAAb,CAAmB,KAAKpC,QAAxB,EAAmCsC,GAAnC,CAAwC,KAAKvC,UAA7C;;AAEA,YAAMwE,cAAc,GAAG,KAAK,KAAK9E,aAAL,CAAmB+E,UAAnB,CAA+BrH,WAAW,CAAC8G,qBAAZ,CAAmC,KAAKhG,MAAL,CAAYiE,WAA/C,CAA/B,CAA5B;;AAEA,YAAKY,IAAI,KAAK,GAAd,EAAoB;AAEnB,eAAK7C,YAAL,CAAkBmC,IAAlB,CAAwB,KAAKjC,GAA7B;AACA,eAAKD,aAAL,GAAqB,KAAKF,QAAL,CAAcyE,OAAd,CAAuB,KAAK1E,UAA5B,CAArB;;AAEA,eAAKM,UAAL,CAAgB+B,IAAhB,CAAsB,KAAKrC,UAA3B,EAAwCwC,SAAxC;;AACA,eAAKjC,QAAL,CAAc8B,IAAd,CAAoB,KAAKpC,QAAzB,EAAoCuC,SAApC;;AAEA,eAAKrC,aAAL,IAAwB,KAAKI,QAAL,CAAcoE,KAAd,CAAqB,KAAKrE,UAA1B,EAAuC+D,GAAvC,CAA4C,KAAKjE,GAAjD,IAAyD,CAAzD,GAA6D,CAA7D,GAAiE,CAAE,CAA3F;AAEA,SAVD,MAUO,IAAK2C,IAAI,KAAK,MAAd,EAAuB;AAE7B,eAAK7C,YAAL,CAAkBmC,IAAlB,CAAwB,KAAKhC,OAA7B,EAAuCsE,KAAvC,CAA8C,KAAKvE,GAAnD,EAAyDoC,SAAzD;AACA,eAAKrC,aAAL,GAAqB,KAAKE,OAAL,CAAagE,GAAb,CAAkBjH,WAAW,CAACiF,IAAZ,CAAkB,KAAKnC,YAAvB,EAAsCyE,KAAtC,CAA6C,KAAKvE,GAAlD,CAAlB,IAA8EoE,cAAnG;AAEA,SALM,MAKA,IAAKzB,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAAzB,IAAgCA,IAAI,KAAK,GAA9C,EAAoD;AAE1D,eAAK7C,YAAL,CAAkBmC,IAAlB,CAAwB9E,KAAK,CAAEwF,IAAF,CAA7B;;AAEA3F,UAAAA,WAAW,CAACiF,IAAZ,CAAkB9E,KAAK,CAAEwF,IAAF,CAAvB;;AAEA,cAAKQ,KAAK,KAAK,OAAf,EAAyB;AAExBnG,YAAAA,WAAW,CAACoG,eAAZ,CAA6B,KAAK5D,eAAlC;AAEA;;AAED,eAAKO,aAAL,GAAqB,KAAKE,OAAL,CAAagE,GAAb,CAAkBjH,WAAW,CAACuH,KAAZ,CAAmB,KAAKvE,GAAxB,EAA8BoC,SAA9B,EAAlB,IAAgEgC,cAArF;AAEA,SAnC8B,CAqC/B;;;AAEA,YAAK,KAAKI,YAAV,EAAyB,KAAKzE,aAAL,GAAqB6D,IAAI,CAACC,KAAL,CAAY,KAAK9D,aAAL,GAAqB,KAAKyE,YAAtC,IAAuD,KAAKA,YAAjF,CAvCM,CAyC/B;;AACA,YAAKrB,KAAK,KAAK,OAAV,IAAqBR,IAAI,KAAK,GAA9B,IAAqCA,IAAI,KAAK,MAAnD,EAA4D;AAE3DhB,UAAAA,MAAM,CAACqB,UAAP,CAAkBf,IAAlB,CAAwB,KAAKpB,gBAA7B;AACAc,UAAAA,MAAM,CAACqB,UAAP,CAAkBkB,QAAlB,CAA4BhH,eAAe,CAACuH,gBAAhB,CAAkC,KAAK3E,YAAvC,EAAqD,KAAKC,aAA1D,CAA5B,EAAwGqC,SAAxG;AAEA,SALD,MAKO;AAEN,eAAKtC,YAAL,CAAkBsD,eAAlB,CAAmC,KAAK7C,oBAAxC;AACAoB,UAAAA,MAAM,CAACqB,UAAP,CAAkBf,IAAlB,CAAwB/E,eAAe,CAACuH,gBAAhB,CAAkC,KAAK3E,YAAvC,EAAqD,KAAKC,aAA1D,CAAxB;AACA4B,UAAAA,MAAM,CAACqB,UAAP,CAAkBkB,QAAlB,CAA4B,KAAKrD,gBAAjC,EAAoDuB,SAApD;AAEA;AAED;;AAED,WAAK/C,aAAL,CAAoB9B,YAApB;AACA,WAAK8B,aAAL,CAAoBzB,kBAApB;AAEA;;;WAED,mBAAWyE,OAAX,EAAqB;AAEpB,UAAKA,OAAO,CAACQ,MAAR,KAAmB,CAAxB,EAA4B;;AAE5B,UAAK,KAAKP,QAAL,IAAmB,KAAKK,IAAL,KAAc,IAAtC,EAA+C;AAE9CjF,QAAAA,aAAa,CAACC,IAAd,GAAqB,KAAKA,IAA1B;AACA,aAAK0B,aAAL,CAAoB3B,aAApB;AAEA;;AAED,WAAK4E,QAAL,GAAgB,KAAhB;AACA,WAAKK,IAAL,GAAY,IAAZ;AAEA;;;WAED,mBAAU;AAET,WAAK5E,UAAL,CAAgB2G,mBAAhB,CAAqC,aAArC,EAAoD,KAAKxD,cAAzD;AACA,WAAKnD,UAAL,CAAgB2G,mBAAhB,CAAqC,aAArC,EAAoD,KAAKtD,eAAzD;AACA,WAAKrD,UAAL,CAAgB2G,mBAAhB,CAAqC,aAArC,EAAoD,KAAKpD,cAAzD;AACA,WAAKvD,UAAL,CAAgB2G,mBAAhB,CAAqC,WAArC,EAAkD,KAAKlD,YAAvD;AAEA,WAAKmD,QAAL,CAAe,UAAWC,KAAX,EAAmB;AAEjC,YAAKA,KAAK,CAACC,QAAX,EAAsBD,KAAK,CAACC,QAAN,CAAeC,OAAf;AACtB,YAAKF,KAAK,CAACG,QAAX,EAAsBH,KAAK,CAACG,QAAN,CAAeD,OAAf;AAEtB,OALD;AAOA,K,CAED;;;;WACA,gBAAQnD,MAAR,EAAiB;AAEhB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKvD,OAAL,GAAe,IAAf;AAEA,aAAO,IAAP;AAEA,K,CAED;;;;WACA,kBAAS;AAER,WAAKuD,MAAL,GAAc3D,SAAd;AACA,WAAKI,OAAL,GAAe,KAAf;AACA,WAAKuE,IAAL,GAAY,IAAZ;AAEA,aAAO,IAAP;AAEA;;;WAED,wBAAe;AAEd,aAAO5F,UAAP;AAEA,K,CAED;;;;WAEA,mBAAU;AAET,aAAO,KAAKY,IAAZ;AAEA;;;WAED,iBAASA,IAAT,EAAgB;AAEf,WAAKA,IAAL,GAAYA,IAAZ;AAEA;;;WAED,4BAAoB+F,eAApB,EAAsC;AAErC,WAAKA,eAAL,GAAuBA,eAAvB;AAEA;;;WAED,yBAAiBc,YAAjB,EAAgC;AAE/B,WAAKA,YAAL,GAAoBA,YAApB;AAEA;;;WAED,sBAAcL,SAAd,EAA0B;AAEzB,WAAKA,SAAL,GAAiBA,SAAjB;AAEA;;;WAED,iBAASa,IAAT,EAAgB;AAEf,WAAKA,IAAL,GAAYA,IAAZ;AAEA;;;WAED,kBAAU7B,KAAV,EAAkB;AAEjB,WAAKA,KAAL,GAAaA,KAAb;AAEA;;;WAED,kBAAS;AAERlF,MAAAA,OAAO,CAACC,IAAR,CAAc,uGAAd;AAEA;;;;EAtkB8B3B,Q;;AA0kBhCsB,iBAAiB,CAACoH,SAAlB,CAA4BC,mBAA5B,GAAkD,IAAlD,C,CAEA;;AAEA,SAASlE,UAAT,CAAqBmE,KAArB,EAA6B;AAE5B,MAAK,KAAKpH,UAAL,CAAgBqH,aAAhB,CAA8BC,kBAAnC,EAAwD;AAEvD,WAAO;AACN/B,MAAAA,CAAC,EAAE,CADG;AAENC,MAAAA,CAAC,EAAE,CAFG;AAGNV,MAAAA,MAAM,EAAEsC,KAAK,CAACtC;AAHR,KAAP;AAMA,GARD,MAQO;AAEN,QAAMyC,IAAI,GAAG,KAAKvH,UAAL,CAAgBwH,qBAAhB,EAAb;AAEA,WAAO;AACNjC,MAAAA,CAAC,EAAE,CAAE6B,KAAK,CAACK,OAAN,GAAgBF,IAAI,CAACG,IAAvB,IAAgCH,IAAI,CAACI,KAArC,GAA6C,CAA7C,GAAiD,CAD9C;AAENnC,MAAAA,CAAC,EAAE,EAAI4B,KAAK,CAACQ,OAAN,GAAgBL,IAAI,CAACM,GAAzB,IAAiCN,IAAI,CAACO,MAAtC,GAA+C,CAA/C,GAAmD,CAFhD;AAGNhD,MAAAA,MAAM,EAAEsC,KAAK,CAACtC;AAHR,KAAP;AAMA;AAED;;AAED,SAASxB,cAAT,CAAyB8D,KAAzB,EAAiC;AAEhC,MAAK,CAAE,KAAKW,OAAZ,EAAsB;;AAEtB,UAASX,KAAK,CAACY,WAAf;AAEC,SAAK,OAAL;AACA,SAAK,KAAL;AACC,WAAKC,YAAL,CAAmB,KAAKjF,WAAL,CAAkBoE,KAAlB,CAAnB;AACA;AALF;AASA;;AAED,SAAShE,aAAT,CAAwBgE,KAAxB,EAAgC;AAE/B,MAAK,CAAE,KAAKW,OAAZ,EAAsB;AAEtB,OAAK/H,UAAL,CAAgBkI,iBAAhB,CAAmCd,KAAK,CAACe,SAAzC;AAEA,OAAKnI,UAAL,CAAgB2D,gBAAhB,CAAkC,aAAlC,EAAiD,KAAKJ,cAAtD;AAEA,OAAK0E,YAAL,CAAmB,KAAKjF,WAAL,CAAkBoE,KAAlB,CAAnB;AACA,OAAKgB,WAAL,CAAkB,KAAKpF,WAAL,CAAkBoE,KAAlB,CAAlB;AAEA;;AAED,SAAS5D,aAAT,CAAwB4D,KAAxB,EAAgC;AAE/B,MAAK,CAAE,KAAKW,OAAZ,EAAsB;AAEtB,OAAKM,WAAL,CAAkB,KAAKrF,WAAL,CAAkBoE,KAAlB,CAAlB;AAEA;;AAED,SAAS1D,WAAT,CAAsB0D,KAAtB,EAA8B;AAE7B,MAAK,CAAE,KAAKW,OAAZ,EAAsB;AAEtB,OAAK/H,UAAL,CAAgBsI,qBAAhB,CAAuClB,KAAK,CAACe,SAA7C;AAEA,OAAKnI,UAAL,CAAgB2G,mBAAhB,CAAqC,aAArC,EAAoD,KAAKpD,cAAzD;AAEA,OAAKgF,SAAL,CAAgB,KAAKvF,WAAL,CAAkBoE,KAAlB,CAAhB;AAEA;;AAED,SAAS1C,sBAAT,CAAiCd,MAAjC,EAAyC4E,SAAzC,EAAoDC,gBAApD,EAAuE;AAEtE,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,eAAV,CAA2B/E,MAA3B,EAAmC,IAAnC,CAAzB;;AAEA,OAAM,IAAIgF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGF,gBAAgB,CAACzC,MAAtC,EAA8C2C,CAAC,EAA/C,EAAqD;AAEpD,QAAKF,gBAAgB,CAAEE,CAAF,CAAhB,CAAsBhF,MAAtB,CAA6BvD,OAA7B,IAAwCoI,gBAA7C,EAAgE;AAE/D,aAAOC,gBAAgB,CAAEE,CAAF,CAAvB;AAEA;AAED;;AAED,SAAO,KAAP;AAEA,C,CAED;AAEA;;;AAEA,IAAMC,UAAU,GAAG,IAAI5K,KAAJ,EAAnB;;AACA,IAAM6K,YAAY,GAAG,IAAI/J,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAArB;;AACA,IAAMgK,WAAW,GAAG,IAAIhK,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAApB;;AACA,IAAMiK,aAAa,GAAG,IAAI3K,OAAJ,EAAtB;;AACA,IAAM4K,gBAAgB,GAAG,IAAItK,UAAJ,EAAzB;;AACA,IAAMuK,mBAAmB,GAAG,IAAIvK,UAAJ,EAA5B;;AACA,IAAMwK,UAAU,GAAG,IAAIpK,OAAJ,EAAnB;;AACA,IAAMqK,WAAW,GAAG,IAAI/K,OAAJ,EAApB;;AAEA,IAAMgL,MAAM,GAAG,IAAItK,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;;AACA,IAAMuK,MAAM,GAAG,IAAIvK,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;;AACA,IAAMwK,MAAM,GAAG,IAAIxK,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;;AAEA,IAAMyK,GAAG,GAAG,IAAIzK,OAAJ,EAAZ;;AACA,IAAM0K,GAAG,GAAG,IAAI1K,OAAJ,EAAZ;;AACA,IAAM2K,GAAG,GAAG,IAAI3K,OAAJ,EAAZ;;IAEM0B,sB;;;;;AAEL,oCAAc;AAAA;;AAAA;;AAEb;AAEA,WAAKhB,IAAL,GAAY,wBAAZ,CAJa,CAMb;;AAEA,QAAMkK,aAAa,GAAG,IAAIpL,iBAAJ,CAAuB;AAC5CqL,MAAAA,SAAS,EAAE,KADiC;AAE5CC,MAAAA,UAAU,EAAE,KAFgC;AAG5CC,MAAAA,GAAG,EAAE,KAHuC;AAI5CC,MAAAA,UAAU,EAAE,KAJgC;AAK5CC,MAAAA,WAAW,EAAE;AAL+B,KAAvB,CAAtB;AAQA,QAAMC,iBAAiB,GAAG,IAAI7L,iBAAJ,CAAuB;AAChDwL,MAAAA,SAAS,EAAE,KADqC;AAEhDC,MAAAA,UAAU,EAAE,KAFoC;AAGhDC,MAAAA,GAAG,EAAE,KAH2C;AAIhDC,MAAAA,UAAU,EAAE,KAJoC;AAKhDC,MAAAA,WAAW,EAAE;AALmC,KAAvB,CAA1B,CAhBa,CAwBb;;AAEA,QAAME,YAAY,GAAGP,aAAa,CAACQ,KAAd,EAArB;AACAD,IAAAA,YAAY,CAACE,OAAb,GAAuB,IAAvB;AAEA,QAAMC,SAAS,GAAGJ,iBAAiB,CAACE,KAAlB,EAAlB;AACAE,IAAAA,SAAS,CAACD,OAAV,GAAoB,GAApB;AAEA,QAAME,MAAM,GAAGX,aAAa,CAACQ,KAAd,EAAf;AACAG,IAAAA,MAAM,CAACC,KAAP,CAAaC,MAAb,CAAqB,QAArB;AAEA,QAAMC,QAAQ,GAAGd,aAAa,CAACQ,KAAd,EAAjB;AACAM,IAAAA,QAAQ,CAACF,KAAT,CAAeC,MAAf,CAAuB,QAAvB;AAEA,QAAME,OAAO,GAAGf,aAAa,CAACQ,KAAd,EAAhB;AACAO,IAAAA,OAAO,CAACH,KAAR,CAAcC,MAAd,CAAsB,QAAtB;AAEA,QAAMG,iBAAiB,GAAGhB,aAAa,CAACQ,KAAd,EAA1B;AACAQ,IAAAA,iBAAiB,CAACJ,KAAlB,CAAwBC,MAAxB,CAAgC,QAAhC;AACAG,IAAAA,iBAAiB,CAACP,OAAlB,GAA4B,GAA5B;AAEA,QAAMQ,mBAAmB,GAAGjB,aAAa,CAACQ,KAAd,EAA5B;AACAS,IAAAA,mBAAmB,CAACL,KAApB,CAA0BC,MAA1B,CAAkC,QAAlC;AACAI,IAAAA,mBAAmB,CAACR,OAApB,GAA8B,GAA9B;AAEA,QAAMS,kBAAkB,GAAGlB,aAAa,CAACQ,KAAd,EAA3B;AACAU,IAAAA,kBAAkB,CAACN,KAAnB,CAAyBC,MAAzB,CAAiC,QAAjC;AACAK,IAAAA,kBAAkB,CAACT,OAAnB,GAA6B,GAA7B;AAEA,QAAMU,mBAAmB,GAAGnB,aAAa,CAACQ,KAAd,EAA5B;AACAW,IAAAA,mBAAmB,CAACV,OAApB,GAA8B,IAA9B;AAEA,QAAMW,oBAAoB,GAAGpB,aAAa,CAACQ,KAAd,EAA7B;AACAY,IAAAA,oBAAoB,CAACR,KAArB,CAA2BC,MAA3B,CAAmC,QAAnC;AACAO,IAAAA,oBAAoB,CAACX,OAArB,GAA+B,IAA/B;AAEA,QAAMY,SAAS,GAAGrB,aAAa,CAACQ,KAAd,EAAlB;AACAa,IAAAA,SAAS,CAACT,KAAV,CAAgBC,MAAhB,CAAwB,QAAxB;AAEA,QAAMS,OAAO,GAAGtB,aAAa,CAACQ,KAAd,EAAhB;AACAc,IAAAA,OAAO,CAACV,KAAR,CAAcC,MAAd,CAAsB,QAAtB,EAhEa,CAkEb;;AAEA,QAAMU,aAAa,GAAG,IAAInN,gBAAJ,CAAsB,CAAtB,EAAyB,IAAzB,EAA+B,GAA/B,EAAoC,EAApC,CAAtB;AACAmN,IAAAA,aAAa,CAACC,SAAd,CAAyB,CAAzB,EAA4B,IAA5B,EAAkC,CAAlC;AAEA,QAAMC,mBAAmB,GAAG,IAAIvN,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAA5B;AACAuN,IAAAA,mBAAmB,CAACD,SAApB,CAA+B,CAA/B,EAAkC,IAAlC,EAAwC,CAAxC;AAEA,QAAME,YAAY,GAAG,IAAIvN,cAAJ,EAArB;AACAuN,IAAAA,YAAY,CAACC,YAAb,CAA2B,UAA3B,EAAuC,IAAIpN,sBAAJ,CAA4B,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAA5B,EAAkD,CAAlD,CAAvC;AAEA,QAAMqN,aAAa,GAAG,IAAIxN,gBAAJ,CAAsB,MAAtB,EAA8B,MAA9B,EAAsC,GAAtC,EAA2C,CAA3C,CAAtB;AACAwN,IAAAA,aAAa,CAACJ,SAAd,CAAyB,CAAzB,EAA4B,IAA5B,EAAkC,CAAlC;;AAEA,aAASK,cAAT,CAAyBC,MAAzB,EAAiCC,GAAjC,EAAuC;AAEtC,UAAM5E,QAAQ,GAAG,IAAIhI,aAAJ,CAAmB2M,MAAnB,EAA2B,MAA3B,EAAmC,CAAnC,EAAsC,EAAtC,EAA0CC,GAAG,GAAG7F,IAAI,CAAC8F,EAAX,GAAgB,CAA1D,CAAjB;AACA7E,MAAAA,QAAQ,CAAC8E,OAAT,CAAkB/F,IAAI,CAAC8F,EAAL,GAAU,CAA5B;AACA7E,MAAAA,QAAQ,CAAC+E,OAAT,CAAkBhG,IAAI,CAAC8F,EAAL,GAAU,CAA5B;AACA,aAAO7E,QAAP;AAEA,KAvFY,CAyFb;;;AAEA,aAASgF,uBAAT,GAAmC;AAElC,UAAMhF,QAAQ,GAAG,IAAIhJ,cAAJ,EAAjB;AAEAgJ,MAAAA,QAAQ,CAACwE,YAAT,CAAuB,UAAvB,EAAmC,IAAIpN,sBAAJ,CAA4B,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAA5B,EAAkD,CAAlD,CAAnC;AAEA,aAAO4I,QAAP;AAEA,KAnGY,CAqGb;;;AAEA,QAAMiF,cAAc,GAAG;AACtB1M,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAU4M,aAAV,EAAyBZ,MAAzB,CAAF,EAAqC,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAArC,EAAoD,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAEzE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAApD,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU4M,aAAV,EAAyBZ,MAAzB,CAAF,EAAqC,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAArC,EAAsD,CAAE,CAAF,EAAK,CAAL,EAAQzE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAAtD,CAFE,EAGF,CAAE,IAAIrN,IAAJ,CAAUiN,aAAV,EAAyBjB,MAAzB,CAAF,EAAqC,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAArC,EAAkD,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAEzE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAAlD,CAHE,CADmB;AAMtBrM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAU4M,aAAV,EAAyBT,QAAzB,CAAF,EAAuC,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAAvC,CADE,EAEF,CAAE,IAAInM,IAAJ,CAAU4M,aAAV,EAAyBT,QAAzB,CAAF,EAAuC,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAAvC,EAAwD,CAAE5E,IAAI,CAAC8F,EAAP,EAAW,CAAX,EAAc,CAAd,CAAxD,CAFE,EAGF,CAAE,IAAIrN,IAAJ,CAAUiN,aAAV,EAAyBd,QAAzB,CAAF,CAHE,CANmB;AAWtBlL,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAU4M,aAAV,EAAyBR,OAAzB,CAAF,EAAsC,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAAtC,EAAqD,CAAE7E,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAArD,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU4M,aAAV,EAAyBR,OAAzB,CAAF,EAAsC,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAAtC,EAAuD,CAAE,CAAE7E,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAvD,CAFE,EAGF,CAAE,IAAIrN,IAAJ,CAAUiN,aAAV,EAAyBb,OAAzB,CAAF,EAAsC,IAAtC,EAA4C,CAAE7E,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA5C,CAHE,CAXmB;AAgBtBK,MAAAA,GAAG,EAAE,CACJ,CAAE,IAAI1N,IAAJ,CAAU,IAAIG,kBAAJ,CAAwB,GAAxB,EAA6B,CAA7B,CAAV,EAA4CqM,mBAAmB,CAACX,KAApB,EAA5C,CAAF,EAA6E,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAA7E,CADI,CAhBiB;AAmBtB8B,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI3N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+CgN,kBAAkB,CAACV,KAAnB,EAA/C,CAAF,EAA+E,CAAE,IAAF,EAAQ,IAAR,EAAc,CAAd,CAA/E,CADG,CAnBkB;AAsBtB+B,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI5N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+C8M,iBAAiB,CAACR,KAAlB,EAA/C,CAAF,EAA8E,CAAE,CAAF,EAAK,IAAL,EAAW,IAAX,CAA9E,EAAiG,CAAE,CAAF,EAAKtE,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAjG,CADG,CAtBkB;AAyBtBQ,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI7N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+C+M,mBAAmB,CAACT,KAApB,EAA/C,CAAF,EAAgF,CAAE,IAAF,EAAQ,CAAR,EAAW,IAAX,CAAhF,EAAmG,CAAE,CAAEtE,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAnG,CADG;AAzBkB,KAAvB;AA8BA,QAAMS,eAAe,GAAG;AACvB/M,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAApE,EAAmF,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAAnF,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAApE,EAAqF,CAAE,CAAF,EAAK,CAAL,EAAQrE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAArF,CAFE,CADoB;AAKvBrM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAApE,CADE,EAEF,CAAE,IAAI5L,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAApE,EAAqF,CAAE,CAAF,EAAK,CAAL,EAAQrE,IAAI,CAAC8F,EAAb,CAArF,CAFE,CALoB;AASvBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAApE,EAAmF,CAAErE,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAnF,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAApE,EAAqF,CAAE,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAArF,CAFE,CAToB;AAavBK,MAAAA,GAAG,EAAE,CACJ,CAAE,IAAI1N,IAAJ,CAAU,IAAIG,kBAAJ,CAAwB,GAAxB,EAA6B,CAA7B,CAAV,EAA4CyL,YAA5C,CAAF,CADI,CAbkB;AAgBvB+B,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI3N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,IAAF,EAAQ,IAAR,EAAc,CAAd,CAA/D,CADG,CAhBmB;AAmBvBgC,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI5N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,CAAF,EAAK,IAAL,EAAW,IAAX,CAA/D,EAAkF,CAAE,CAAF,EAAKrE,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAlF,CADG,CAnBmB;AAsBvBQ,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI7N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,IAAF,EAAQ,CAAR,EAAW,IAAX,CAA/D,EAAkF,CAAE,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAlF,CADG;AAtBmB,KAAxB;AA2BA,QAAMU,eAAe,GAAG;AACvBC,MAAAA,KAAK,EAAE,CACN,CAAE,IAAIhO,IAAJ,CAAU,IAAIG,kBAAJ,CAAwB,IAAxB,EAA8B,CAA9B,CAAV,EAA6C4L,SAA7C,CAAF,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,QAA9E,CADM,CADgB;AAIvBkC,MAAAA,GAAG,EAAE,CACJ,CAAE,IAAIjO,IAAJ,CAAU,IAAIG,kBAAJ,CAAwB,IAAxB,EAA8B,CAA9B,CAAV,EAA6C4L,SAA7C,CAAF,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,QAA9E,CADI,CAJkB;AAOvBmC,MAAAA,KAAK,EAAE,CACN,CAAE,IAAIrO,IAAJ,CAAU2N,uBAAuB,EAAjC,EAAqCzB,SAArC,CAAF,EAAoD,IAApD,EAA0D,IAA1D,EAAgE,IAAhE,EAAsE,QAAtE,CADM,CAPgB;AAUvBhL,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIlB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAA/C,EAAgE,IAAhE,EAAsE,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAtE,EAAqF,QAArF,CADE,CAVoB;AAavB7K,MAAAA,CAAC,EAAE,CACF,CAAE,IAAInB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAA/C,EAAgE,CAAE,CAAF,EAAK,CAAL,EAAQtE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAAhE,EAAuF,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAvF,EAAsG,QAAtG,CADE,CAboB;AAgBvBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIpB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAA/C,EAAgE,CAAE,CAAF,EAAK,CAAEtE,IAAI,CAAC8F,EAAP,GAAY,CAAjB,EAAoB,CAApB,CAAhE,EAAyF,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAzF,EAAwG,QAAxG,CADE;AAhBoB,KAAxB;AAqBA,QAAMc,WAAW,GAAG;AACnBC,MAAAA,IAAI,EAAE,CACL,CAAE,IAAIpO,IAAJ,CAAUkN,cAAc,CAAE,GAAF,EAAO,CAAP,CAAxB,EAAoCP,OAApC,CAAF,EAAiD,IAAjD,EAAuD,CAAE,CAAF,EAAKpF,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAvD,CADK,CADa;AAInBtM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAUkN,cAAc,CAAE,GAAF,EAAO,GAAP,CAAxB,EAAsClB,MAAtC,CAAF,CADE,CAJgB;AAOnBhL,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAUkN,cAAc,CAAE,GAAF,EAAO,GAAP,CAAxB,EAAsCf,QAAtC,CAAF,EAAoD,IAApD,EAA0D,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE5E,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAA1D,CADE,CAPgB;AAUnBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAUkN,cAAc,CAAE,GAAF,EAAO,GAAP,CAAxB,EAAsCd,OAAtC,CAAF,EAAmD,IAAnD,EAAyD,CAAE,CAAF,EAAK7E,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAzD,CADE,CAVgB;AAanBgB,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIrO,IAAJ,CAAUkN,cAAc,CAAE,IAAF,EAAQ,CAAR,CAAxB,EAAqCT,oBAArC,CAAF,EAA+D,IAA/D,EAAqE,CAAE,CAAF,EAAKlF,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAArE,CADE;AAbgB,KAApB;AAkBA,QAAMiB,YAAY,GAAG;AACpBC,MAAAA,IAAI,EAAE,CACL,CAAE,IAAI1O,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAA/C,EAAgE,IAAhE,EAAsE,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAtE,EAAqF,QAArF,CADK;AADc,KAArB;AAMA,QAAM2C,YAAY,GAAG;AACpBJ,MAAAA,IAAI,EAAE,CACL,CAAE,IAAIpO,IAAJ,CAAU,IAAIO,cAAJ,CAAoB,IAApB,EAA0B,EAA1B,EAA8B,CAA9B,CAAV,EAA6CqL,YAA7C,CAAF,CADK,CADc;AAIpB7K,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAU,IAAIQ,aAAJ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,CAA7B,EAAgC,EAAhC,CAAV,EAAgDoL,YAAhD,CAAF,EAAkE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAlE,EAA+E,CAAE,CAAF,EAAK,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAAjB,EAAoB,CAAE9F,IAAI,CAAC8F,EAAP,GAAY,CAAhC,CAA/E,CADE,CAJiB;AAOpBrM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAU,IAAIQ,aAAJ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,CAA7B,EAAgC,EAAhC,CAAV,EAAgDoL,YAAhD,CAAF,EAAkE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAlE,EAA+E,CAAErE,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/E,CADE,CAPiB;AAUpBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAU,IAAIQ,aAAJ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,CAA7B,EAAgC,EAAhC,CAAV,EAAgDoL,YAAhD,CAAF,EAAkE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAlE,EAA+E,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAA/E,CADE,CAViB;AAapBgB,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIrO,IAAJ,CAAU,IAAIQ,aAAJ,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,CAA9B,EAAiC,EAAjC,CAAV,EAAiDoL,YAAjD,CAAF,CADE;AAbiB,KAArB;AAkBA,QAAM6C,UAAU,GAAG;AAClB1N,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAU8M,mBAAV,EAA+Bd,MAA/B,CAAF,EAA2C,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAA3C,EAA0D,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAEzE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAA1D,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAUiN,aAAV,EAAyBjB,MAAzB,CAAF,EAAqC,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAArC,EAAkD,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAEzE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAAlD,CAFE,EAGF,CAAE,IAAIrN,IAAJ,CAAU8M,mBAAV,EAA+Bd,MAA/B,CAAF,EAA2C,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAA3C,EAA4D,CAAE,CAAF,EAAK,CAAL,EAAQzE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAA5D,CAHE,CADe;AAMlBrM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAU8M,mBAAV,EAA+BX,QAA/B,CAAF,EAA6C,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAA7C,CADE,EAEF,CAAE,IAAInM,IAAJ,CAAUiN,aAAV,EAAyBd,QAAzB,CAAF,CAFE,EAGF,CAAE,IAAInM,IAAJ,CAAU8M,mBAAV,EAA+BX,QAA/B,CAAF,EAA6C,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAA7C,EAA8D,CAAE,CAAF,EAAK,CAAL,EAAQ5E,IAAI,CAAC8F,EAAb,CAA9D,CAHE,CANe;AAWlBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAU8M,mBAAV,EAA+BV,OAA/B,CAAF,EAA4C,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAA5C,EAA2D,CAAE7E,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA3D,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAUiN,aAAV,EAAyBb,OAAzB,CAAF,EAAsC,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAtC,EAAmD,CAAE7E,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAnD,CAFE,EAGF,CAAE,IAAIrN,IAAJ,CAAU8M,mBAAV,EAA+BV,OAA/B,CAAF,EAA4C,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAA5C,EAA6D,CAAE,CAAE7E,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAA7D,CAHE,CAXe;AAgBlBM,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI3N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+CgN,kBAA/C,CAAF,EAAuE,CAAE,IAAF,EAAQ,IAAR,EAAc,CAAd,CAAvE,CADG,CAhBc;AAmBlBqB,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI5N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+C8M,iBAA/C,CAAF,EAAsE,CAAE,CAAF,EAAK,IAAL,EAAW,IAAX,CAAtE,EAAyF,CAAE,CAAF,EAAK9E,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAzF,CADG,CAnBc;AAsBlBQ,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI7N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,CAAV,EAA+C+M,mBAA/C,CAAF,EAAwE,CAAE,IAAF,EAAQ,CAAR,EAAW,IAAX,CAAxE,EAA2F,CAAE,CAAE/E,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAA3F,CADG,CAtBc;AAyBlBK,MAAAA,GAAG,EAAE,CACJ,CAAE,IAAI1N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAV,EAA4CiN,mBAAmB,CAACX,KAApB,EAA5C,CAAF,CADI;AAzBa,KAAnB;AA8BA,QAAM6C,WAAW,GAAG;AACnB3N,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIf,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAApE,EAAmF,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAApB,CAAnF,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAApE,EAAqF,CAAE,CAAF,EAAK,CAAL,EAAQrE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAArF,CAFE,CADgB;AAKnBrM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIhB,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAApE,CADE,EAEF,CAAE,IAAI5L,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAApE,EAAqF,CAAE,CAAF,EAAK,CAAL,EAAQrE,IAAI,CAAC8F,EAAb,CAArF,CAFE,CALgB;AASnBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIjB,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAApE,EAAmF,CAAErE,IAAI,CAAC8F,EAAL,GAAU,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAnF,CADE,EAEF,CAAE,IAAIrN,IAAJ,CAAU,IAAIP,gBAAJ,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,CAAnC,CAAV,EAAkDmM,YAAlD,CAAF,EAAoE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAApE,EAAqF,CAAE,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAArF,CAFE,CATgB;AAanBM,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI3N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,IAAF,EAAQ,IAAR,EAAc,CAAd,CAA/D,CADG,CAbe;AAgBnBgC,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI5N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,CAAF,EAAK,IAAL,EAAW,IAAX,CAA/D,EAAkF,CAAE,CAAF,EAAKrE,IAAI,CAAC8F,EAAL,GAAU,CAAf,EAAkB,CAAlB,CAAlF,CADG,CAhBe;AAmBnBQ,MAAAA,EAAE,EAAE,CACH,CAAE,IAAI7N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CAAV,EAA6CqM,YAA7C,CAAF,EAA+D,CAAE,IAAF,EAAQ,CAAR,EAAW,IAAX,CAA/D,EAAkF,CAAE,CAAErE,IAAI,CAAC8F,EAAP,GAAY,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAlF,CADG,CAnBe;AAsBnBK,MAAAA,GAAG,EAAE,CACJ,CAAE,IAAI1N,IAAJ,CAAU,IAAIT,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAV,EAA4CqM,YAA5C,CAAF,EAA8D,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAA9D,CADI;AAtBc,KAApB;AA2BA,QAAM+C,WAAW,GAAG;AACnB5N,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIlB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAE,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAA/C,EAAgE,IAAhE,EAAsE,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAtE,EAAqF,QAArF,CADE,CADgB;AAInB7K,MAAAA,CAAC,EAAE,CACF,CAAE,IAAInB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAF,EAAK,CAAE,GAAP,EAAY,CAAZ,CAA/C,EAAgE,CAAE,CAAF,EAAK,CAAL,EAAQtE,IAAI,CAAC8F,EAAL,GAAU,CAAlB,CAAhE,EAAuF,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAvF,EAAsG,QAAtG,CADE,CAJgB;AAOnBpM,MAAAA,CAAC,EAAE,CACF,CAAE,IAAIpB,IAAJ,CAAUkN,YAAV,EAAwBhB,SAAS,CAACF,KAAV,EAAxB,CAAF,EAA+C,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAE,GAAV,CAA/C,EAAgE,CAAE,CAAF,EAAK,CAAEtE,IAAI,CAAC8F,EAAP,GAAY,CAAjB,EAAoB,CAApB,CAAhE,EAAyF,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CAAzF,EAAwG,QAAxG,CADE;AAPgB,KAApB,CAxRa,CAoSb;;AAEA,aAASuB,UAAT,CAAqBC,QAArB,EAAgC;AAE/B,UAAMC,KAAK,GAAG,IAAI5O,QAAJ,EAAd;;AAEA,WAAM,IAAMqG,IAAZ,IAAoBsI,QAApB,EAA+B;AAE9B,aAAM,IAAIvE,CAAC,GAAGuE,QAAQ,CAAEtI,IAAF,CAAR,CAAiBoB,MAA/B,EAAuC2C,CAAC,EAAxC,GAA+C;AAE9C,cAAMhF,MAAM,GAAGuJ,QAAQ,CAAEtI,IAAF,CAAR,CAAkB+D,CAAlB,EAAuB,CAAvB,EAA2BuB,KAA3B,EAAf;AACA,cAAMnF,QAAQ,GAAGmI,QAAQ,CAAEtI,IAAF,CAAR,CAAkB+D,CAAlB,EAAuB,CAAvB,CAAjB;AACA,cAAMyE,QAAQ,GAAGF,QAAQ,CAAEtI,IAAF,CAAR,CAAkB+D,CAAlB,EAAuB,CAAvB,CAAjB;AACA,cAAM1D,KAAK,GAAGiI,QAAQ,CAAEtI,IAAF,CAAR,CAAkB+D,CAAlB,EAAuB,CAAvB,CAAd;AACA,cAAM0E,GAAG,GAAGH,QAAQ,CAAEtI,IAAF,CAAR,CAAkB+D,CAAlB,EAAuB,CAAvB,CAAZ,CAN8C,CAQ9C;;AACAhF,UAAAA,MAAM,CAACiB,IAAP,GAAcA,IAAd;AACAjB,UAAAA,MAAM,CAAC0J,GAAP,GAAaA,GAAb;;AAEA,cAAKtI,QAAL,EAAgB;AAEfpB,YAAAA,MAAM,CAACoB,QAAP,CAAgB5D,GAAhB,CAAqB4D,QAAQ,CAAE,CAAF,CAA7B,EAAoCA,QAAQ,CAAE,CAAF,CAA5C,EAAmDA,QAAQ,CAAE,CAAF,CAA3D;AAEA;;AAED,cAAKqI,QAAL,EAAgB;AAEfzJ,YAAAA,MAAM,CAACyJ,QAAP,CAAgBjM,GAAhB,CAAqBiM,QAAQ,CAAE,CAAF,CAA7B,EAAoCA,QAAQ,CAAE,CAAF,CAA5C,EAAmDA,QAAQ,CAAE,CAAF,CAA3D;AAEA;;AAED,cAAKnI,KAAL,EAAa;AAEZtB,YAAAA,MAAM,CAACsB,KAAP,CAAa9D,GAAb,CAAkB8D,KAAK,CAAE,CAAF,CAAvB,EAA8BA,KAAK,CAAE,CAAF,CAAnC,EAA0CA,KAAK,CAAE,CAAF,CAA/C;AAEA;;AAEDtB,UAAAA,MAAM,CAAC2J,YAAP;AAEA,cAAMC,YAAY,GAAG5J,MAAM,CAACkD,QAAP,CAAgBqD,KAAhB,EAArB;AACAqD,UAAAA,YAAY,CAACC,YAAb,CAA2B7J,MAAM,CAAC8J,MAAlC;AACA9J,UAAAA,MAAM,CAACkD,QAAP,GAAkB0G,YAAlB;AACA5J,UAAAA,MAAM,CAAC+J,WAAP,GAAqBC,QAArB;AAEAhK,UAAAA,MAAM,CAACoB,QAAP,CAAgB5D,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACAwC,UAAAA,MAAM,CAACyJ,QAAP,CAAgBjM,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACAwC,UAAAA,MAAM,CAACsB,KAAP,CAAa9D,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAEAgM,UAAAA,KAAK,CAAC1M,GAAN,CAAWkD,MAAX;AAEA;AAED;;AAED,aAAOwJ,KAAP;AAEA,KA7VY,CA+Vb;;;AAEA,WAAKA,KAAL,GAAa,EAAb;AACA,WAAKzI,MAAL,GAAc,EAAd;AACA,WAAKkJ,MAAL,GAAc,EAAd;;AAEA,WAAKnN,GAAL,CAAU,OAAK0M,KAAL,CAAY,WAAZ,IAA4BF,UAAU,CAAEnB,cAAF,CAAhD;;AACA,WAAKrL,GAAL,CAAU,OAAK0M,KAAL,CAAY,QAAZ,IAAyBF,UAAU,CAAET,WAAF,CAA7C;;AACA,WAAK/L,GAAL,CAAU,OAAK0M,KAAL,CAAY,OAAZ,IAAwBF,UAAU,CAAEH,UAAF,CAA5C;;AACA,WAAKrM,GAAL,CAAU,OAAKiE,MAAL,CAAa,WAAb,IAA6BuI,UAAU,CAAEd,eAAF,CAAjD;;AACA,WAAK1L,GAAL,CAAU,OAAKiE,MAAL,CAAa,QAAb,IAA0BuI,UAAU,CAAEJ,YAAF,CAA9C;;AACA,WAAKpM,GAAL,CAAU,OAAKiE,MAAL,CAAa,OAAb,IAAyBuI,UAAU,CAAEF,WAAF,CAA7C;;AACA,WAAKtM,GAAL,CAAU,OAAKmN,MAAL,CAAa,WAAb,IAA6BX,UAAU,CAAEb,eAAF,CAAjD;;AACA,WAAK3L,GAAL,CAAU,OAAKmN,MAAL,CAAa,QAAb,IAA0BX,UAAU,CAAEN,YAAF,CAA9C;;AACA,WAAKlM,GAAL,CAAU,OAAKmN,MAAL,CAAa,OAAb,IAAyBX,UAAU,CAAED,WAAF,CAA7C,EA7Wa,CA+Wb;;;AAEA,WAAKtI,MAAL,CAAa,WAAb,EAA2BtE,OAA3B,GAAqC,KAArC;AACA,WAAKsE,MAAL,CAAa,QAAb,EAAwBtE,OAAxB,GAAkC,KAAlC;AACA,WAAKsE,MAAL,CAAa,OAAb,EAAuBtE,OAAvB,GAAiC,KAAjC;AAnXa;AAqXb,G,CAED;;;;;WAEA,2BAAmByN,KAAnB,EAA2B;AAAA;;AAE1B,UAAM1I,KAAK,GAAK,KAAKxF,IAAL,KAAc,OAAhB,GAA4B,OAA5B,GAAsC,KAAKwF,KAAzD,CAF0B,CAEsC;;AAEhE,UAAMH,UAAU,GAAKG,KAAK,KAAK,OAAZ,GAAwB,KAAK3D,eAA7B,GAA+CyH,mBAAlE,CAJ0B,CAM1B;;AAEA,WAAKkE,KAAL,CAAY,WAAZ,EAA0B/M,OAA1B,GAAoC,KAAKT,IAAL,KAAc,WAAlD;AACA,WAAKwN,KAAL,CAAY,QAAZ,EAAuB/M,OAAvB,GAAiC,KAAKT,IAAL,KAAc,QAA/C;AACA,WAAKwN,KAAL,CAAY,OAAZ,EAAsB/M,OAAtB,GAAgC,KAAKT,IAAL,KAAc,OAA9C;AAEA,WAAKiO,MAAL,CAAa,WAAb,EAA2BxN,OAA3B,GAAqC,KAAKT,IAAL,KAAc,WAAnD;AACA,WAAKiO,MAAL,CAAa,QAAb,EAAwBxN,OAAxB,GAAkC,KAAKT,IAAL,KAAc,QAAhD;AACA,WAAKiO,MAAL,CAAa,OAAb,EAAuBxN,OAAvB,GAAiC,KAAKT,IAAL,KAAc,OAA/C;AAGA,UAAImO,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAgB,KAAKrJ,MAAL,CAAa,KAAK/E,IAAlB,EAAyBqO,QAAzC,CAAV;AACAF,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAgB,KAAKZ,KAAL,CAAY,KAAKxN,IAAjB,EAAwBqO,QAAxC,CAAV;AACAF,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAgB,KAAKH,MAAL,CAAa,KAAKjO,IAAlB,EAAyBqO,QAAzC,CAAV;;AApB0B,iCAsBhBrF,CAtBgB;AAwBzB,YAAMsF,MAAM,GAAGH,OAAO,CAAEnF,CAAF,CAAtB,CAxByB,CA0BzB;;AAEAsF,QAAAA,MAAM,CAAC7N,OAAP,GAAiB,IAAjB;AACA6N,QAAAA,MAAM,CAACb,QAAP,CAAgBjM,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACA8M,QAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC3C,aAA3B;AAEA,YAAI4M,MAAM,SAAV;;AAEA,YAAK,MAAI,CAACpO,MAAL,CAAYqO,oBAAjB,EAAwC;AAEvCD,UAAAA,MAAM,GAAG,CAAE,MAAI,CAACpO,MAAL,CAAY8H,GAAZ,GAAkB,MAAI,CAAC9H,MAAL,CAAYsO,MAAhC,IAA2C,MAAI,CAACtO,MAAL,CAAYuO,IAAhE;AAEA,SAJD,MAIO;AAENH,UAAAA,MAAM,GAAG,MAAI,CAAC5M,aAAL,CAAmB+E,UAAnB,CAA+B,MAAI,CAAC3E,cAApC,IAAuDkE,IAAI,CAAC0I,GAAL,CAAU,MAAM1I,IAAI,CAAC2I,GAAL,CAAU3I,IAAI,CAAC8F,EAAL,GAAU,MAAI,CAAC5L,MAAL,CAAY0O,GAAtB,GAA4B,GAAtC,CAAN,GAAoD,MAAI,CAAC1O,MAAL,CAAYuO,IAA1E,EAAgF,CAAhF,CAAhE;AAEA;;AAEDJ,QAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA4BsN,cAA5B,CAA4CP,MAAM,GAAG,MAAI,CAAClH,IAAd,GAAqB,CAAjE,EA5CyB,CA8CzB;;AAEA,YAAKiH,MAAM,CAACZ,GAAP,KAAe,QAApB,EAA+B;AAE9BY,UAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;;AAEA,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,MAArB,EAA8B;AAE7BqJ,YAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC1C,kBAA3B;AACA0M,YAAAA,MAAM,CAAC7N,OAAP,GAAiB,CAAC,CAAE,MAAI,CAACuE,IAAzB;;AAEA,gBAAK,MAAI,CAACA,IAAL,KAAc,GAAnB,EAAyB;AAExBzF,cAAAA,eAAe,CAACwP,YAAhB,CAA8B9F,UAAU,CAACzH,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAA9B;;AACA8M,cAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwBe,UAAxB,EAAqCkB,QAArC,CAA+ChH,eAA/C;;AAEA,kBAAK0G,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBmF,MAAnB,EAA4BhE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF,GAA7F,EAAmG;AAElGiM,gBAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,gBAAK,MAAI,CAACuE,IAAL,KAAc,GAAnB,EAAyB;AAExBzF,cAAAA,eAAe,CAACwP,YAAhB,CAA8B9F,UAAU,CAACzH,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsByE,IAAI,CAAC8F,EAAL,GAAU,CAAhC,CAA9B;;AACAuC,cAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwBe,UAAxB,EAAqCkB,QAArC,CAA+ChH,eAA/C;;AAEA,kBAAK0G,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBoF,MAAnB,EAA4BjE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF,GAA7F,EAAmG;AAElGiM,gBAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,gBAAK,MAAI,CAACuE,IAAL,KAAc,GAAnB,EAAyB;AAExBzF,cAAAA,eAAe,CAACwP,YAAhB,CAA8B9F,UAAU,CAACzH,GAAX,CAAgB,CAAhB,EAAmByE,IAAI,CAAC8F,EAAL,GAAU,CAA7B,EAAgC,CAAhC,CAA9B;;AACAuC,cAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwBe,UAAxB,EAAqCkB,QAArC,CAA+ChH,eAA/C;;AAEA,kBAAK0G,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBqF,MAAnB,EAA4BlE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF,GAA7F,EAAmG;AAElGiM,gBAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,gBAAK,MAAI,CAACuE,IAAL,KAAc,MAAnB,EAA4B;AAE3BzF,cAAAA,eAAe,CAACwP,YAAhB,CAA8B9F,UAAU,CAACzH,GAAX,CAAgB,CAAhB,EAAmByE,IAAI,CAAC8F,EAAL,GAAU,CAA7B,EAAgC,CAAhC,CAA9B;;AACA7C,cAAAA,YAAY,CAAC5E,IAAb,CAAmB,MAAI,CAACnC,YAAxB;;AACAmM,cAAAA,MAAM,CAACjJ,UAAP,CAAkB4J,qBAAlB,CAAyC7F,aAAa,CAAC8F,MAAd,CAAsB/F,WAAtB,EAAmCD,YAAnC,EAAiDQ,MAAjD,CAAzC;AACA4E,cAAAA,MAAM,CAACjJ,UAAP,CAAkBkB,QAAlB,CAA4BhH,eAA5B;AACA+O,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,MAAI,CAACkE,QAAtB;AAEA;;AAED,gBAAK,MAAI,CAACK,IAAL,KAAc,GAAnB,EAAyB;AAExBsJ,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAGD,WA7DD,MA6DO,IAAK6N,MAAM,CAACrJ,IAAP,KAAgB,OAArB,EAA+B;AAErCqJ,YAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC1C,kBAA3B;AACA0M,YAAAA,MAAM,CAAC7N,OAAP,GAAiB,MAAI,CAACkE,QAAtB;AAEA,WALM,MAKA,IAAK2J,MAAM,CAACrJ,IAAP,KAAgB,KAArB,EAA6B;AAEnCqJ,YAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC3C,aAA3B;AACA2M,YAAAA,MAAM,CAAC7N,OAAP,GAAiB,MAAI,CAACkE,QAAtB;AAEA,WALM,MAKA,IAAK2J,MAAM,CAACrJ,IAAP,KAAgB,OAArB,EAA+B;AAErCqJ,YAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC1C,kBAA3B;AACA0M,YAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwB,MAAI,CAACxC,oBAA7B;;AACAzC,YAAAA,WAAW,CAACmC,GAAZ,CAAiB,KAAjB,EAAwB,KAAxB,EAA+B,KAA/B,EAAuCV,GAAvC,CAA4C,MAAI,CAACc,kBAAjD,EAAsE4C,GAAtE,CAA2E,MAAI,CAAC7C,aAAhF,EAAgGmN,cAAhG,CAAgH,CAAE,CAAlH;;AACAzP,YAAAA,WAAW,CAACoG,eAAZ,CAA6B,MAAI,CAAC3D,oBAAL,CAA0ByI,KAA1B,GAAkChG,MAAlC,EAA7B;;AACA+J,YAAAA,MAAM,CAAChJ,KAAP,CAAahB,IAAb,CAAmBjF,WAAnB;AACAiP,YAAAA,MAAM,CAAC7N,OAAP,GAAiB,MAAI,CAACkE,QAAtB;AAEA,WATM,MASA;AAEN2J,YAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwBe,UAAxB;;AAEA,gBAAK,MAAI,CAACV,QAAV,EAAqB;AAEpB2J,cAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC1C,kBAA3B;AAEA,aAJD,MAIO;AAEN0M,cAAAA,MAAM,CAAClJ,QAAP,CAAgBd,IAAhB,CAAsB,MAAI,CAAC3C,aAA3B;AAEA;;AAED,gBAAK,MAAI,CAACqD,IAAV,EAAiB;AAEhBsJ,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,MAAI,CAACuE,IAAL,CAAUgB,MAAV,CAAkBsI,MAAM,CAACrJ,IAAzB,MAAoC,CAAE,CAAvD;AAEA;AAED,WAxG6B,CA0G9B;;;AACA;AAEA,SA7JwB,CA+JzB;;;AAEAqJ,QAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwBe,UAAxB;;AAEA,YAAK,MAAI,CAACrF,IAAL,KAAc,WAAd,IAA6B,MAAI,CAACA,IAAL,KAAc,OAAhD,EAA0D;AAEzD;AAEA,cAAMmP,kBAAkB,GAAG,IAA3B;AACA,cAAMC,mBAAmB,GAAG,GAA5B;;AAEA,cAAKd,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBmF,MAAnB,EAA4BhE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF8M,kBAA7F,EAAkH;AAEjHb,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBoF,MAAnB,EAA4BjE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF8M,kBAA7F,EAAkH;AAEjHb,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBqF,MAAnB,EAA4BlE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF8M,kBAA7F,EAAkH;AAEjHb,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,IAArB,EAA4B;AAE3B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBqF,MAAnB,EAA4BlE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF+M,mBAA7F,EAAmH;AAElHd,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,IAArB,EAA4B;AAE3B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBmF,MAAnB,EAA4BhE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF+M,mBAA7F,EAAmH;AAElHd,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;;AAED,cAAK6N,MAAM,CAACrJ,IAAP,KAAgB,IAArB,EAA4B;AAE3B,gBAAKgB,IAAI,CAAC+I,GAAL,CAAU9F,YAAY,CAAC5E,IAAb,CAAmBoF,MAAnB,EAA4BjE,eAA5B,CAA6CJ,UAA7C,EAA0DiB,GAA1D,CAA+D,MAAI,CAACjE,GAApE,CAAV,IAAwF+M,mBAA7F,EAAmH;AAElHd,cAAAA,MAAM,CAAChJ,KAAP,CAAa9D,GAAb,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC;AACA8M,cAAAA,MAAM,CAAC7N,OAAP,GAAiB,KAAjB;AAEA;AAED;AAED,SAzED,MAyEO,IAAK,MAAI,CAACT,IAAL,KAAc,QAAnB,EAA8B;AAEpC;AAEAqJ,UAAAA,gBAAgB,CAAC/E,IAAjB,CAAuBe,UAAvB;;AACA6D,UAAAA,YAAY,CAAC5E,IAAb,CAAmB,MAAI,CAACjC,GAAxB,EAA8BoD,eAA9B,CAA+ClG,eAAe,CAAC+E,IAAhB,CAAsBe,UAAtB,EAAmCd,MAAnC,EAA/C;;AAEA,cAAK+J,MAAM,CAACrJ,IAAP,CAAYe,MAAZ,CAAoB,GAApB,MAA8B,CAAE,CAArC,EAAyC;AAExCsI,YAAAA,MAAM,CAACjJ,UAAP,CAAkB4J,qBAAlB,CAAyC7F,aAAa,CAAC8F,MAAd,CAAsB,MAAI,CAAC7M,GAA3B,EAAgC8G,WAAhC,EAA6CO,MAA7C,CAAzC;AAEA;;AAED,cAAK4E,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B1F,YAAAA,eAAe,CAACuH,gBAAhB,CAAkC2C,MAAlC,EAA0CxD,IAAI,CAACoJ,KAAL,CAAY,CAAEnG,YAAY,CAACtD,CAA3B,EAA8BsD,YAAY,CAACrD,CAA3C,CAA1C;;AACAtG,YAAAA,eAAe,CAAC+P,mBAAhB,CAAqCjG,gBAArC,EAAuD9J,eAAvD;;AACA+O,YAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwB/E,eAAxB;AAEA;;AAED,cAAK+O,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B1F,YAAAA,eAAe,CAACuH,gBAAhB,CAAkC4C,MAAlC,EAA0CzD,IAAI,CAACoJ,KAAL,CAAYnG,YAAY,CAACvD,CAAzB,EAA4BuD,YAAY,CAACrD,CAAzC,CAA1C;;AACAtG,YAAAA,eAAe,CAAC+P,mBAAhB,CAAqCjG,gBAArC,EAAuD9J,eAAvD;;AACA+O,YAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwB/E,eAAxB;AAEA;;AAED,cAAK+O,MAAM,CAACrJ,IAAP,KAAgB,GAArB,EAA2B;AAE1B1F,YAAAA,eAAe,CAACuH,gBAAhB,CAAkC6C,MAAlC,EAA0C1D,IAAI,CAACoJ,KAAL,CAAYnG,YAAY,CAACtD,CAAzB,EAA4BsD,YAAY,CAACvD,CAAzC,CAA1C;;AACApG,YAAAA,eAAe,CAAC+P,mBAAhB,CAAqCjG,gBAArC,EAAuD9J,eAAvD;;AACA+O,YAAAA,MAAM,CAACjJ,UAAP,CAAkBf,IAAlB,CAAwB/E,eAAxB;AAEA;AAED,SAjRwB,CAmRzB;;;AACA+O,QAAAA,MAAM,CAAC7N,OAAP,GAAiB6N,MAAM,CAAC7N,OAAP,KAAoB6N,MAAM,CAACrJ,IAAP,CAAYS,OAAZ,CAAqB,GAArB,MAA+B,CAAE,CAAjC,IAAsC,MAAI,CAAC6J,KAA/D,CAAjB;AACAjB,QAAAA,MAAM,CAAC7N,OAAP,GAAiB6N,MAAM,CAAC7N,OAAP,KAAoB6N,MAAM,CAACrJ,IAAP,CAAYS,OAAZ,CAAqB,GAArB,MAA+B,CAAE,CAAjC,IAAsC,MAAI,CAAC8J,KAA/D,CAAjB;AACAlB,QAAAA,MAAM,CAAC7N,OAAP,GAAiB6N,MAAM,CAAC7N,OAAP,KAAoB6N,MAAM,CAACrJ,IAAP,CAAYS,OAAZ,CAAqB,GAArB,MAA+B,CAAE,CAAjC,IAAsC,MAAI,CAAC+J,KAA/D,CAAjB;AACAnB,QAAAA,MAAM,CAAC7N,OAAP,GAAiB6N,MAAM,CAAC7N,OAAP,KAAoB6N,MAAM,CAACrJ,IAAP,CAAYS,OAAZ,CAAqB,GAArB,MAA+B,CAAE,CAAjC,IAAwC,MAAI,CAAC6J,KAAL,IAAc,MAAI,CAACC,KAAnB,IAA4B,MAAI,CAACC,KAA7F,CAAjB,CAvRyB,CAyRzB;;AAEAnB,QAAAA,MAAM,CAAClH,QAAP,CAAgBsI,MAAhB,GAAyBpB,MAAM,CAAClH,QAAP,CAAgBsI,MAAhB,IAA0BpB,MAAM,CAAClH,QAAP,CAAgBuD,KAAhB,CAAsBJ,KAAtB,EAAnD;AACA+D,QAAAA,MAAM,CAAClH,QAAP,CAAgBuI,QAAhB,GAA2BrB,MAAM,CAAClH,QAAP,CAAgBuI,QAAhB,IAA4BrB,MAAM,CAAClH,QAAP,CAAgBoD,OAAvE;AAEA8D,QAAAA,MAAM,CAAClH,QAAP,CAAgBuD,KAAhB,CAAsBrG,IAAtB,CAA4BgK,MAAM,CAAClH,QAAP,CAAgBsI,MAA5C;AACApB,QAAAA,MAAM,CAAClH,QAAP,CAAgBoD,OAAhB,GAA0B8D,MAAM,CAAClH,QAAP,CAAgBuI,QAA1C;;AAEA,YAAK,MAAI,CAACxH,OAAL,IAAgB,MAAI,CAACnD,IAA1B,EAAiC;AAEhC,cAAKsJ,MAAM,CAACrJ,IAAP,KAAgB,MAAI,CAACD,IAA1B,EAAiC;AAEhCsJ,YAAAA,MAAM,CAAClH,QAAP,CAAgBuD,KAAhB,CAAsBC,MAAtB,CAA8B,QAA9B;AACA0D,YAAAA,MAAM,CAAClH,QAAP,CAAgBoD,OAAhB,GAA0B,GAA1B;AAEA,WALD,MAKO,IAAK,MAAI,CAACxF,IAAL,CAAU4K,KAAV,CAAiB,EAAjB,EAAsBC,IAAtB,CAA4B,UAAWC,CAAX,EAAe;AAEtD,mBAAOxB,MAAM,CAACrJ,IAAP,KAAgB6K,CAAvB;AAEA,WAJW,CAAL,EAID;AAELxB,YAAAA,MAAM,CAAClH,QAAP,CAAgBuD,KAAhB,CAAsBC,MAAtB,CAA8B,QAA9B;AACA0D,YAAAA,MAAM,CAAClH,QAAP,CAAgBoD,OAAhB,GAA0B,GAA1B;AAEA;AAED;AAnTwB;;AAsB1B,WAAM,IAAIxB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmF,OAAO,CAAC9H,MAA7B,EAAqC2C,CAAC,EAAtC,EAA4C;AAAA,yBAAlCA,CAAkC;;AAAA,iCAqI1C;AA0JD;;AAED,oGAAyBkF,KAAzB;AAEA;;;;EAprBmCtP,Q;;AAwrBrCiC,sBAAsB,CAACyG,SAAvB,CAAiCyI,wBAAjC,GAA4D,IAA5D,C,CAEA;;IAEM/O,sB;;;;;AAEL,oCAAc;AAAA;;AAAA;;AAEb,gCACC,IAAIlC,aAAJ,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,CAAnC,EAAsC,CAAtC,CADD,EAEC,IAAIH,iBAAJ,CAAuB;AAAE8B,MAAAA,OAAO,EAAE,KAAX;AAAkBuP,MAAAA,SAAS,EAAE,IAA7B;AAAmCC,MAAAA,IAAI,EAAE7R,UAAzC;AAAqDgM,MAAAA,WAAW,EAAE,IAAlE;AAAwEI,MAAAA,OAAO,EAAE,GAAjF;AAAsFL,MAAAA,UAAU,EAAE;AAAlG,KAAvB,CAFD;AAKA,WAAKtK,IAAL,GAAY,wBAAZ;AAPa;AASb;;;;WAED,2BAAmBqO,KAAnB,EAA2B;AAE1B,UAAI1I,KAAK,GAAG,KAAKA,KAAjB;AAEA,WAAKJ,QAAL,CAAcd,IAAd,CAAoB,KAAK3C,aAAzB;AAEA,UAAK,KAAK3B,IAAL,KAAc,OAAnB,EAA6BwF,KAAK,GAAG,OAAR,CANH,CAMoB;;AAE9CoE,MAAAA,GAAG,CAACtF,IAAJ,CAAUmF,MAAV,EAAmBhE,eAAnB,CAAoCD,KAAK,KAAK,OAAV,GAAoB,KAAK3D,eAAzB,GAA2CyH,mBAA/E;;AACAO,MAAAA,GAAG,CAACvF,IAAJ,CAAUoF,MAAV,EAAmBjE,eAAnB,CAAoCD,KAAK,KAAK,OAAV,GAAoB,KAAK3D,eAAzB,GAA2CyH,mBAA/E;;AACAQ,MAAAA,GAAG,CAACxF,IAAJ,CAAUqF,MAAV,EAAmBlE,eAAnB,CAAoCD,KAAK,KAAK,OAAV,GAAoB,KAAK3D,eAAzB,GAA2CyH,mBAA/E,EAV0B,CAY1B;;;AAEAJ,MAAAA,YAAY,CAAC5E,IAAb,CAAmBuF,GAAnB;;AAEA,cAAS,KAAK7J,IAAd;AAEC,aAAK,WAAL;AACA,aAAK,OAAL;AACC,kBAAS,KAAKgF,IAAd;AAEC,iBAAK,GAAL;AACCkE,cAAAA,YAAY,CAAC5E,IAAb,CAAmB,KAAKjC,GAAxB,EAA8BuE,KAA9B,CAAqCgD,GAArC;;AACAL,cAAAA,UAAU,CAACjF,IAAX,CAAiBsF,GAAjB,EAAuBhD,KAAvB,CAA8BsC,YAA9B;;AACA;;AACD,iBAAK,GAAL;AACCA,cAAAA,YAAY,CAAC5E,IAAb,CAAmB,KAAKjC,GAAxB,EAA8BuE,KAA9B,CAAqCiD,GAArC;;AACAN,cAAAA,UAAU,CAACjF,IAAX,CAAiBuF,GAAjB,EAAuBjD,KAAvB,CAA8BsC,YAA9B;;AACA;;AACD,iBAAK,GAAL;AACCA,cAAAA,YAAY,CAAC5E,IAAb,CAAmB,KAAKjC,GAAxB,EAA8BuE,KAA9B,CAAqCkD,GAArC;;AACAP,cAAAA,UAAU,CAACjF,IAAX,CAAiBwF,GAAjB,EAAuBlD,KAAvB,CAA8BsC,YAA9B;;AACA;;AACD,iBAAK,IAAL;AACCK,cAAAA,UAAU,CAACjF,IAAX,CAAiBwF,GAAjB;;AACA;;AACD,iBAAK,IAAL;AACCP,cAAAA,UAAU,CAACjF,IAAX,CAAiBsF,GAAjB;;AACA;;AACD,iBAAK,IAAL;AACCV,cAAAA,YAAY,CAAC5E,IAAb,CAAmBwF,GAAnB;;AACAP,cAAAA,UAAU,CAACjF,IAAX,CAAiBuF,GAAjB;;AACA;;AACD,iBAAK,KAAL;AACA,iBAAK,GAAL;AACCN,cAAAA,UAAU,CAAC/H,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;;AACA;AA3BF;;AA+BA;;AACD,aAAK,QAAL;AACA;AACC;AACA+H,UAAAA,UAAU,CAAC/H,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;;AAvCF;;AA2CA,UAAK+H,UAAU,CAAClD,MAAX,OAAwB,CAA7B,EAAiC;AAEhC;AACA,aAAKhB,UAAL,CAAgBf,IAAhB,CAAsB,KAAKtC,gBAA3B;AAEA,OALD,MAKO;AAENwH,QAAAA,WAAW,CAAC0F,MAAZ,CAAoB7P,WAAW,CAACmC,GAAZ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAApB,EAAgD+H,UAAhD,EAA4DL,YAA5D;;AAEA,aAAK7D,UAAL,CAAgB4J,qBAAhB,CAAuCzF,WAAvC;AAEA;;AAED,oGAAyB0E,KAAzB;AAEA;;;;EAvFmCxP,I;;AA2FrCsC,sBAAsB,CAACsG,SAAvB,CAAiC4I,wBAAjC,GAA4D,IAA5D;AAEA,SAAShQ,iBAAT,EAA4BW,sBAA5B,EAAoDG,sBAApD","sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.cross( this.eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detatch from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\tupdate() {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t}\n\n}\n\nTransformControls.prototype.isTransformControls = true;\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.setPointerCapture( event.pointerId );\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_TRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true;\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"]},"metadata":{},"sourceType":"module"}