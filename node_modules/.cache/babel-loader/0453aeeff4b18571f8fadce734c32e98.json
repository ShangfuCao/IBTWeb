{"ast":null,"code":"import _defineProperty from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\nimport { Vector3 } from 'three';\nimport { CameraProjections, dimension, IfcComponent, NavigationModes } from '../../../base-types';\nimport { LiteEvent } from '../../../utils/LiteEvent';\nexport var FirstPersonControl = /*#__PURE__*/function (_IfcComponent) {\n  _inherits(FirstPersonControl, _IfcComponent);\n\n  var _super = _createSuper(FirstPersonControl);\n\n  function FirstPersonControl(context, camera, ifcCamera) {\n    var _this$controlsMap;\n\n    var _this;\n\n    _classCallCheck(this, FirstPersonControl);\n\n    _this = _super.call(this, context);\n    _this.enabled = false;\n    _this.mode = NavigationModes.FirstPerson;\n    _this.onChange = new LiteEvent();\n    _this.onUnlock = new LiteEvent();\n    _this.onChangeProjection = new LiteEvent();\n    _this.prevTime = performance.now();\n    _this.velocity = new Vector3();\n    _this.direction = new Vector3();\n    _this.speed = 200;\n    _this.keyBinding = {\n      forward: {\n        active: false,\n        keys: ['KeyW', 'ArrowUp']\n      },\n      back: {\n        active: false,\n        keys: ['KeyS', 'ArrowDown']\n      },\n      right: {\n        active: false,\n        keys: ['KeyD', 'ArrowRight']\n      },\n      left: {\n        active: false,\n        keys: ['KeyA', 'ArrowLeft']\n      },\n      up: {\n        active: false,\n        keys: ['KeyR']\n      },\n      down: {\n        active: false,\n        keys: ['KeyF']\n      }\n    };\n    _this.controlsMap = (_this$controlsMap = {}, _defineProperty(_this$controlsMap, dimension.z, [_this.keyBinding.forward, _this.keyBinding.back]), _defineProperty(_this$controlsMap, dimension.x, [_this.keyBinding.right, _this.keyBinding.left]), _defineProperty(_this$controlsMap, dimension.y, [_this.keyBinding.up, _this.keyBinding.down]), _this$controlsMap);\n    _this.dimensions = [dimension.x, dimension.y, dimension.z];\n\n    _this.onKeyDown = function (event) {\n      var found = _this.getControl(event);\n\n      if (found) found.active = true;\n    };\n\n    _this.onKeyUp = function (event) {\n      var found = _this.getControl(event);\n\n      if (found) found.active = false;\n    };\n\n    _this.ifcCamera = ifcCamera;\n    _this.controls = new PointerLockControls(camera, context.getDomElement());\n\n    _this.controls.addEventListener('unlock', function (event) {\n      ifcCamera.setNavigationMode(NavigationModes.Orbit);\n\n      _this.onUnlock.trigger(event);\n    });\n\n    _this.controls.addEventListener('change', function (event) {\n      _this.onChange.trigger(event);\n    });\n\n    context.getScene().add(_this.controls.getObject());\n    return _this;\n  }\n\n  _createClass(FirstPersonControl, [{\n    key: \"projection\",\n    get: function get() {\n      return CameraProjections.Perspective;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(active) {\n      if (active && this.ifcCamera.projection === CameraProjections.Orthographic) {\n        this.ifcCamera.toggleProjection();\n      }\n\n      this.enabled = active;\n      if (active) this.enable();else this.disable();\n    }\n  }, {\n    key: \"update\",\n    value: function update(_delta) {\n      if (this.enabled && this.controls.isLocked) {\n        var currentTime = performance.now();\n        var delta = (currentTime - this.prevTime) / 1000;\n        this.move(delta);\n        this.prevTime = currentTime;\n      }\n    }\n    /**\r\n     * @deprecated Use onChange.on() instead.\r\n     */\n\n  }, {\n    key: \"submitOnChange\",\n    value: function submitOnChange(action) {\n      this.onChange.on(action);\n    }\n    /**\r\n     * @deprecated Use onChange.on() instead.\r\n     */\n\n  }, {\n    key: \"submitOnUnlock\",\n    value: function submitOnUnlock(action) {\n      this.onUnlock.on(action);\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      if (!this.controls.isLocked) this.controls.lock();\n      document.addEventListener('keydown', this.onKeyDown);\n      document.addEventListener('keyup', this.onKeyUp);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (this.controls.isLocked) this.controls.unlock();\n      document.removeEventListener('keydown', this.onKeyDown);\n      document.removeEventListener('keyup', this.onKeyUp);\n    }\n  }, {\n    key: \"move\",\n    value: function move(delta) {\n      this.applySmoothDeceleration(delta);\n      this.updateDirections();\n      this.updateVelocity(delta);\n      this.moveCamera(delta);\n    }\n  }, {\n    key: \"applySmoothDeceleration\",\n    value: function applySmoothDeceleration(delta) {\n      var _this2 = this;\n\n      this.dimensions.forEach(function (dim) {\n        _this2.velocity[dim] -= _this2.velocity[dim] * 10.0 * delta;\n      });\n    }\n  }, {\n    key: \"updateDirections\",\n    value: function updateDirections() {\n      var _this3 = this;\n\n      this.dimensions.forEach(function (dim) {\n        return _this3.updateDirection(dim);\n      });\n      this.direction.normalize(); // this ensures consistent movements in all directions\n    }\n  }, {\n    key: \"updateDirection\",\n    value: function updateDirection(dim) {\n      var controls = this.controlsMap[dim];\n      var oneDirection = controls[0];\n      var oppositeDirection = controls[1];\n      this.direction[dim] = Number(oneDirection.active) - Number(oppositeDirection.active);\n    }\n  }, {\n    key: \"updateVelocity\",\n    value: function updateVelocity(delta) {\n      var _this4 = this;\n\n      this.dimensions.forEach(function (dimension) {\n        var controls = _this4.controlsMap[dimension];\n        var isActive = controls.find(function (control) {\n          return control.active;\n        });\n\n        if (isActive) {\n          _this4.velocity[dimension] -= _this4.direction[dimension] * _this4.speed * delta;\n        }\n      });\n    }\n  }, {\n    key: \"moveCamera\",\n    value: function moveCamera(delta) {\n      this.controls.moveRight(-this.velocity.x * delta);\n      this.controls.moveForward(-this.velocity.z * delta);\n      this.controls.getObject().position.y -= this.velocity.y * delta;\n    }\n  }, {\n    key: \"getControl\",\n    value: function getControl(event) {\n      var controlValues = Object.values(this.keyBinding);\n      return controlValues.find(function (control) {\n        return control.keys.indexOf(event.code) > -1;\n      });\n    }\n  }]);\n\n  return FirstPersonControl;\n}(IfcComponent);","map":{"version":3,"sources":["../../../../src/components/context/camera/FirstPersonControl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\r\nimport { Vector3 } from 'three';\r\nimport { CameraProjections, dimension, IfcComponent, NavigationModes } from '../../../base-types';\r\nimport { LiteEvent } from '../../../utils/LiteEvent';\r\nexport class FirstPersonControl extends IfcComponent {\r\n    constructor(context, camera, ifcCamera) {\r\n        super(context);\r\n        this.enabled = false;\r\n        this.mode = NavigationModes.FirstPerson;\r\n        this.onChange = new LiteEvent();\r\n        this.onUnlock = new LiteEvent();\r\n        this.onChangeProjection = new LiteEvent();\r\n        this.prevTime = performance.now();\r\n        this.velocity = new Vector3();\r\n        this.direction = new Vector3();\r\n        this.speed = 200;\r\n        this.keyBinding = {\r\n            forward: {\r\n                active: false,\r\n                keys: ['KeyW', 'ArrowUp']\r\n            },\r\n            back: {\r\n                active: false,\r\n                keys: ['KeyS', 'ArrowDown']\r\n            },\r\n            right: {\r\n                active: false,\r\n                keys: ['KeyD', 'ArrowRight']\r\n            },\r\n            left: {\r\n                active: false,\r\n                keys: ['KeyA', 'ArrowLeft']\r\n            },\r\n            up: {\r\n                active: false,\r\n                keys: ['KeyR']\r\n            },\r\n            down: {\r\n                active: false,\r\n                keys: ['KeyF']\r\n            }\r\n        };\r\n        this.controlsMap = {\r\n            [dimension.z]: [this.keyBinding.forward, this.keyBinding.back],\r\n            [dimension.x]: [this.keyBinding.right, this.keyBinding.left],\r\n            [dimension.y]: [this.keyBinding.up, this.keyBinding.down]\r\n        };\r\n        this.dimensions = [dimension.x, dimension.y, dimension.z];\r\n        this.onKeyDown = (event) => {\r\n            const found = this.getControl(event);\r\n            if (found)\r\n                found.active = true;\r\n        };\r\n        this.onKeyUp = (event) => {\r\n            const found = this.getControl(event);\r\n            if (found)\r\n                found.active = false;\r\n        };\r\n        this.ifcCamera = ifcCamera;\r\n        this.controls = new PointerLockControls(camera, context.getDomElement());\r\n        this.controls.addEventListener('unlock', (event) => {\r\n            ifcCamera.setNavigationMode(NavigationModes.Orbit);\r\n            this.onUnlock.trigger(event);\r\n        });\r\n        this.controls.addEventListener('change', (event) => {\r\n            this.onChange.trigger(event);\r\n        });\r\n        context.getScene().add(this.controls.getObject());\r\n    }\r\n    get projection() {\r\n        return CameraProjections.Perspective;\r\n    }\r\n    toggle(active) {\r\n        if (active && this.ifcCamera.projection === CameraProjections.Orthographic) {\r\n            this.ifcCamera.toggleProjection();\r\n        }\r\n        this.enabled = active;\r\n        if (active)\r\n            this.enable();\r\n        else\r\n            this.disable();\r\n    }\r\n    update(_delta) {\r\n        if (this.enabled && this.controls.isLocked) {\r\n            const currentTime = performance.now();\r\n            const delta = (currentTime - this.prevTime) / 1000;\r\n            this.move(delta);\r\n            this.prevTime = currentTime;\r\n        }\r\n    }\r\n    /**\r\n     * @deprecated Use onChange.on() instead.\r\n     */\r\n    submitOnChange(action) {\r\n        this.onChange.on(action);\r\n    }\r\n    /**\r\n     * @deprecated Use onChange.on() instead.\r\n     */\r\n    submitOnUnlock(action) {\r\n        this.onUnlock.on(action);\r\n    }\r\n    enable() {\r\n        if (!this.controls.isLocked)\r\n            this.controls.lock();\r\n        document.addEventListener('keydown', this.onKeyDown);\r\n        document.addEventListener('keyup', this.onKeyUp);\r\n    }\r\n    disable() {\r\n        if (this.controls.isLocked)\r\n            this.controls.unlock();\r\n        document.removeEventListener('keydown', this.onKeyDown);\r\n        document.removeEventListener('keyup', this.onKeyUp);\r\n    }\r\n    move(delta) {\r\n        this.applySmoothDeceleration(delta);\r\n        this.updateDirections();\r\n        this.updateVelocity(delta);\r\n        this.moveCamera(delta);\r\n    }\r\n    applySmoothDeceleration(delta) {\r\n        this.dimensions.forEach((dim) => {\r\n            this.velocity[dim] -= this.velocity[dim] * 10.0 * delta;\r\n        });\r\n    }\r\n    updateDirections() {\r\n        this.dimensions.forEach((dim) => this.updateDirection(dim));\r\n        this.direction.normalize(); // this ensures consistent movements in all directions\r\n    }\r\n    updateDirection(dim) {\r\n        const controls = this.controlsMap[dim];\r\n        const oneDirection = controls[0];\r\n        const oppositeDirection = controls[1];\r\n        this.direction[dim] = Number(oneDirection.active) - Number(oppositeDirection.active);\r\n    }\r\n    updateVelocity(delta) {\r\n        this.dimensions.forEach((dimension) => {\r\n            const controls = this.controlsMap[dimension];\r\n            const isActive = controls.find((control) => control.active);\r\n            if (isActive) {\r\n                this.velocity[dimension] -= this.direction[dimension] * this.speed * delta;\r\n            }\r\n        });\r\n    }\r\n    moveCamera(delta) {\r\n        this.controls.moveRight(-this.velocity.x * delta);\r\n        this.controls.moveForward(-this.velocity.z * delta);\r\n        this.controls.getObject().position.y -= this.velocity.y * delta;\r\n    }\r\n    getControl(event) {\r\n        const controlValues = Object.values(this.keyBinding);\r\n        return controlValues.find((control) => control.keys.indexOf(event.code) > -1);\r\n    }\r\n}\r\n//# sourceMappingURL=FirstPersonControl.js.map"]},"metadata":{},"sourceType":"module"}