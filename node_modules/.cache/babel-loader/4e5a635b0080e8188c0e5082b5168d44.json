{"ast":null,"code":"import { Color, Vector2, WebGLRenderer } from 'three';\nimport { CSS2DRenderer } from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport { IfcComponent } from '../../../base-types';\nimport { IfcPostproduction } from './postproduction';\nexport class IfcRenderer extends IfcComponent {\n  constructor(context) {\n    super(context);\n    this.basicRenderer = new WebGLRenderer({\n      antialias: true\n    });\n    this.renderer2D = new CSS2DRenderer();\n    this.renderer = this.basicRenderer;\n    this.postProductionActive = false;\n    this.context = context;\n    this.container = context.options.container;\n    this.setupRenderers();\n    this.postProductionRenderer = new IfcPostproduction(this.context, this.basicRenderer.domElement);\n    this.adjustRendererSize();\n  }\n\n  get usePostproduction() {\n    return this.postProductionActive;\n  }\n\n  set usePostproduction(active) {\n    if (this.postProductionActive === active) return;\n    this.postProductionActive = active;\n    this.renderer = active ? this.postProductionRenderer : this.basicRenderer;\n    if (!active) this.restoreRendererBackgroundColor();\n  }\n\n  update(_delta) {\n    const scene = this.context.getScene();\n    const camera = this.context.getCamera();\n    this.renderer.render(scene, camera);\n    this.renderer2D.render(scene, camera);\n  }\n\n  getSize() {\n    return new Vector2(this.basicRenderer.domElement.clientWidth, this.basicRenderer.domElement.clientHeight);\n  }\n\n  adjustRendererSize() {\n    this.basicRenderer.setSize(this.container.clientWidth, this.container.clientHeight);\n    this.renderer2D.setSize(this.container.clientWidth, this.container.clientHeight);\n    this.postProductionRenderer.setSize(this.container.clientWidth, this.container.clientHeight);\n  }\n\n  newScreenshot() {\n    let usePostproduction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const scene = this.context.getScene();\n    const camera = this.context.getCamera();\n    this.renderer.render(scene, camera);\n    const domElement = usePostproduction ? this.basicRenderer.domElement : this.postProductionRenderer.renderer.domElement;\n    return domElement.toDataURL();\n  }\n\n  setupRenderers() {\n    this.basicRenderer.localClippingEnabled = true;\n    this.container.appendChild(this.basicRenderer.domElement);\n    this.renderer2D.domElement.style.position = 'absolute';\n    this.renderer2D.domElement.style.top = '0px';\n    this.renderer2D.domElement.style.pointerEvents = 'none';\n    this.container.appendChild(this.renderer2D.domElement);\n  }\n\n  restoreRendererBackgroundColor() {\n    this.basicRenderer.setClearColor(new Color(0, 0, 0), 0);\n  }\n\n}","map":{"version":3,"sources":["../../../../src/components/context/renderer/renderer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Color, Vector2, WebGLRenderer } from 'three';\r\nimport { CSS2DRenderer } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\nimport { IfcComponent } from '../../../base-types';\r\nimport { IfcPostproduction } from './postproduction';\r\nexport class IfcRenderer extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.basicRenderer = new WebGLRenderer({ antialias: true });\r\n        this.renderer2D = new CSS2DRenderer();\r\n        this.renderer = this.basicRenderer;\r\n        this.postProductionActive = false;\r\n        this.context = context;\r\n        this.container = context.options.container;\r\n        this.setupRenderers();\r\n        this.postProductionRenderer = new IfcPostproduction(this.context, this.basicRenderer.domElement);\r\n        this.adjustRendererSize();\r\n    }\r\n    get usePostproduction() {\r\n        return this.postProductionActive;\r\n    }\r\n    set usePostproduction(active) {\r\n        if (this.postProductionActive === active)\r\n            return;\r\n        this.postProductionActive = active;\r\n        this.renderer = active ? this.postProductionRenderer : this.basicRenderer;\r\n        if (!active)\r\n            this.restoreRendererBackgroundColor();\r\n    }\r\n    update(_delta) {\r\n        const scene = this.context.getScene();\r\n        const camera = this.context.getCamera();\r\n        this.renderer.render(scene, camera);\r\n        this.renderer2D.render(scene, camera);\r\n    }\r\n    getSize() {\r\n        return new Vector2(this.basicRenderer.domElement.clientWidth, this.basicRenderer.domElement.clientHeight);\r\n    }\r\n    adjustRendererSize() {\r\n        this.basicRenderer.setSize(this.container.clientWidth, this.container.clientHeight);\r\n        this.renderer2D.setSize(this.container.clientWidth, this.container.clientHeight);\r\n        this.postProductionRenderer.setSize(this.container.clientWidth, this.container.clientHeight);\r\n    }\r\n    newScreenshot(usePostproduction = false) {\r\n        const scene = this.context.getScene();\r\n        const camera = this.context.getCamera();\r\n        this.renderer.render(scene, camera);\r\n        const domElement = usePostproduction\r\n            ? this.basicRenderer.domElement\r\n            : this.postProductionRenderer.renderer.domElement;\r\n        return domElement.toDataURL();\r\n    }\r\n    setupRenderers() {\r\n        this.basicRenderer.localClippingEnabled = true;\r\n        this.container.appendChild(this.basicRenderer.domElement);\r\n        this.renderer2D.domElement.style.position = 'absolute';\r\n        this.renderer2D.domElement.style.top = '0px';\r\n        this.renderer2D.domElement.style.pointerEvents = 'none';\r\n        this.container.appendChild(this.renderer2D.domElement);\r\n    }\r\n    restoreRendererBackgroundColor() {\r\n        this.basicRenderer.setClearColor(new Color(0, 0, 0), 0);\r\n    }\r\n}\r\n//# sourceMappingURL=renderer.js.map"]},"metadata":{},"sourceType":"module"}