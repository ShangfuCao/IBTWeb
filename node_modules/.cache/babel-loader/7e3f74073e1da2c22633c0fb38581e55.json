{"ast":null,"code":"import _classCallCheck from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shangfualexcao/Dropbox (Personal)/My Mac (Shangfu\\u2019s MacBook Pro)/Documents/GitHub/IBT-Web/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Clock, Vector2, Vector3 } from 'three';\nimport { NavigationModes } from '../../base-types';\nimport { IfcCamera } from './camera/camera';\nimport { IfcRaycaster } from './raycaster';\nimport { IfcRenderer } from './renderer/renderer';\nimport { IfcScene } from './scene';\nimport { Animator } from './animator';\nimport { IfcEvent, IfcEvents } from './ifcEvent';\nexport var IfcContext = /*#__PURE__*/function () {\n  function IfcContext(options) {\n    var _this = this;\n\n    _classCallCheck(this, IfcContext);\n\n    this.render = function () {\n      requestAnimationFrame(_this.render);\n\n      _this.updateAllComponents();\n    };\n\n    if (!options.container) throw new Error('Could not get container element!');\n    this.options = options;\n    this.events = new IfcEvents();\n    this.items = this.newItems();\n    this.ifcScene = new IfcScene(this);\n    this.renderer = new IfcRenderer(this);\n    this.ifcCamera = new IfcCamera(this);\n    this.events.publish(IfcEvent.onCameraReady);\n    this.clippingPlanes = [];\n    this.ifcCaster = new IfcRaycaster(this);\n    this.clock = new Clock(true);\n    this.ifcAnimator = new Animator();\n    this.setupWindowRescale();\n    this.render();\n  }\n\n  _createClass(IfcContext, [{\n    key: \"getScene\",\n    value: function getScene() {\n      return this.ifcScene.scene;\n    }\n  }, {\n    key: \"getRenderer\",\n    value: function getRenderer() {\n      return this.renderer.basicRenderer;\n    }\n  }, {\n    key: \"getRenderer2D\",\n    value: function getRenderer2D() {\n      return this.renderer.renderer2D;\n    }\n  }, {\n    key: \"getCamera\",\n    value: function getCamera() {\n      return this.ifcCamera.activeCamera;\n    }\n  }, {\n    key: \"getIfcCamera\",\n    value: function getIfcCamera() {\n      return this.ifcCamera;\n    }\n  }, {\n    key: \"getDomElement\",\n    value: function getDomElement() {\n      return this.getRenderer().domElement;\n    }\n  }, {\n    key: \"getDomElement2D\",\n    value: function getDomElement2D() {\n      return this.getRenderer2D().domElement;\n    }\n  }, {\n    key: \"getContainerElement\",\n    value: function getContainerElement() {\n      return this.options.container;\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      var element = this.getContainerElement();\n      return new Vector2(element.clientWidth, element.clientHeight);\n    }\n  }, {\n    key: \"getClippingPlanes\",\n    value: function getClippingPlanes() {\n      return this.clippingPlanes;\n    }\n  }, {\n    key: \"getAnimator\",\n    value: function getAnimator() {\n      return this.ifcAnimator;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(mesh) {\n      var _a;\n\n      var center = new Vector3();\n      mesh.geometry.computeBoundingBox();\n      (_a = mesh.geometry.boundingBox) === null || _a === void 0 ? void 0 : _a.getCenter(center);\n      return center;\n    }\n  }, {\n    key: \"addComponent\",\n    value: function addComponent(component) {\n      this.items.components.push(component);\n    }\n  }, {\n    key: \"addClippingPlane\",\n    value: function addClippingPlane(plane) {\n      this.clippingPlanes.push(plane);\n    }\n  }, {\n    key: \"removeClippingPlane\",\n    value: function removeClippingPlane(plane) {\n      var index = this.clippingPlanes.indexOf(plane);\n      this.clippingPlanes.splice(index, 1);\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(items) {\n      return this.ifcCaster.castRay(items);\n    }\n  }, {\n    key: \"castRayIfc\",\n    value: function castRayIfc() {\n      return this.ifcCaster.castRayIfc();\n    }\n  }, {\n    key: \"fitToFrame\",\n    value: function fitToFrame() {\n      this.ifcCamera.navMode[NavigationModes.Orbit].fitModelToFrame();\n    }\n  }, {\n    key: \"toggleCameraControls\",\n    value: function toggleCameraControls(active, options) {\n      this.ifcCamera.toggleCameraControls(active, options);\n    }\n  }, {\n    key: \"updateAspect\",\n    value: function updateAspect() {\n      this.ifcCamera.updateAspect();\n      this.renderer.adjustRendererSize();\n    }\n  }, {\n    key: \"updateAllComponents\",\n    value: function updateAllComponents() {\n      var delta = this.clock.getDelta();\n      this.items.components.forEach(function (component) {\n        return component.update(delta);\n      });\n    }\n  }, {\n    key: \"setupWindowRescale\",\n    value: function setupWindowRescale() {\n      var _this2 = this;\n\n      window.addEventListener('resize', function () {\n        _this2.updateAspect();\n      });\n    }\n  }, {\n    key: \"newItems\",\n    value: function newItems() {\n      return {\n        components: [],\n        ifcModels: [],\n        pickableIfcModels: []\n      };\n    }\n  }]);\n\n  return IfcContext;\n}();","map":{"version":3,"sources":["../../../src/components/context/context.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Clock, Vector2, Vector3 } from 'three';\r\nimport { NavigationModes } from '../../base-types';\r\nimport { IfcCamera } from './camera/camera';\r\nimport { IfcRaycaster } from './raycaster';\r\nimport { IfcRenderer } from './renderer/renderer';\r\nimport { IfcScene } from './scene';\r\nimport { Animator } from './animator';\r\nimport { IfcEvent, IfcEvents } from './ifcEvent';\r\nexport class IfcContext {\r\n    constructor(options) {\r\n        this.render = () => {\r\n            requestAnimationFrame(this.render);\r\n            this.updateAllComponents();\r\n        };\r\n        if (!options.container)\r\n            throw new Error('Could not get container element!');\r\n        this.options = options;\r\n        this.events = new IfcEvents();\r\n        this.items = this.newItems();\r\n        this.ifcScene = new IfcScene(this);\r\n        this.renderer = new IfcRenderer(this);\r\n        this.ifcCamera = new IfcCamera(this);\r\n        this.events.publish(IfcEvent.onCameraReady);\r\n        this.clippingPlanes = [];\r\n        this.ifcCaster = new IfcRaycaster(this);\r\n        this.clock = new Clock(true);\r\n        this.ifcAnimator = new Animator();\r\n        this.setupWindowRescale();\r\n        this.render();\r\n    }\r\n    getScene() {\r\n        return this.ifcScene.scene;\r\n    }\r\n    getRenderer() {\r\n        return this.renderer.basicRenderer;\r\n    }\r\n    getRenderer2D() {\r\n        return this.renderer.renderer2D;\r\n    }\r\n    getCamera() {\r\n        return this.ifcCamera.activeCamera;\r\n    }\r\n    getIfcCamera() {\r\n        return this.ifcCamera;\r\n    }\r\n    getDomElement() {\r\n        return this.getRenderer().domElement;\r\n    }\r\n    getDomElement2D() {\r\n        return this.getRenderer2D().domElement;\r\n    }\r\n    getContainerElement() {\r\n        return this.options.container;\r\n    }\r\n    getDimensions() {\r\n        const element = this.getContainerElement();\r\n        return new Vector2(element.clientWidth, element.clientHeight);\r\n    }\r\n    getClippingPlanes() {\r\n        return this.clippingPlanes;\r\n    }\r\n    getAnimator() {\r\n        return this.ifcAnimator;\r\n    }\r\n    getCenter(mesh) {\r\n        var _a;\r\n        const center = new Vector3();\r\n        mesh.geometry.computeBoundingBox();\r\n        (_a = mesh.geometry.boundingBox) === null || _a === void 0 ? void 0 : _a.getCenter(center);\r\n        return center;\r\n    }\r\n    addComponent(component) {\r\n        this.items.components.push(component);\r\n    }\r\n    addClippingPlane(plane) {\r\n        this.clippingPlanes.push(plane);\r\n    }\r\n    removeClippingPlane(plane) {\r\n        const index = this.clippingPlanes.indexOf(plane);\r\n        this.clippingPlanes.splice(index, 1);\r\n    }\r\n    castRay(items) {\r\n        return this.ifcCaster.castRay(items);\r\n    }\r\n    castRayIfc() {\r\n        return this.ifcCaster.castRayIfc();\r\n    }\r\n    fitToFrame() {\r\n        this.ifcCamera.navMode[NavigationModes.Orbit].fitModelToFrame();\r\n    }\r\n    toggleCameraControls(active, options) {\r\n        this.ifcCamera.toggleCameraControls(active, options);\r\n    }\r\n    updateAspect() {\r\n        this.ifcCamera.updateAspect();\r\n        this.renderer.adjustRendererSize();\r\n    }\r\n    updateAllComponents() {\r\n        const delta = this.clock.getDelta();\r\n        this.items.components.forEach((component) => component.update(delta));\r\n    }\r\n    setupWindowRescale() {\r\n        window.addEventListener('resize', () => {\r\n            this.updateAspect();\r\n        });\r\n    }\r\n    newItems() {\r\n        return {\r\n            components: [],\r\n            ifcModels: [],\r\n            pickableIfcModels: []\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"module"}