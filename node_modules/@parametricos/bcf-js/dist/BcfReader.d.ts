import { IMarkup, MarkupViewpoint } from "./schema";
import { VisualizationInfo } from "./schema";
import { Reader, TypedArray, ZipEntry, ZipInfo } from 'unzipit';
export declare class BcfReader {
    bcf_archive: ZipInfo | undefined;
    topics: Topic[];
    read: (src: string | ArrayBuffer | TypedArray | Blob | Reader) => Promise<void>;
    getEntry: (name: string) => ZipEntry | undefined;
}
export declare class Topic {
    readonly reader: BcfReader;
    readonly markup_file: ZipEntry;
    markup: IMarkup | undefined;
    viewpoints: VisualizationInfo[];
    constructor(reader: BcfReader, markup: ZipEntry);
    read: () => Promise<void>;
    private parseMarkup;
    private parseViewpoints;
    getViewpointSnapshot: (viewpoint: MarkupViewpoint) => Promise<Blob | undefined>;
}
//# sourceMappingURL=BcfReader.d.ts.map